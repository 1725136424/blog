<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.study.dao.user.UserDao">
  <resultMap id="BaseResultMap" type="com.study.pojo.user.User">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="picture" jdbcType="VARCHAR" property="picture" />
    <result column="register_date" jdbcType="TIMESTAMP" property="registerDate" />
    <result column="validate_code" jdbcType="VARCHAR" property="validateCode" />
    <result column="out_date" jdbcType="TIMESTAMP" property="outDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `name`, username, `password`, picture, register_date, validate_code, out_date
  </sql>
  <select id="selectByExample" parameterType="com.study.pojo.user.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.study.pojo.user.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <delete id="deleteUserRoleRel">
    DELETE FROM user_role_rel WHERE user_id = #{id}
  </delete>
    <delete id="deleteStartFansRel">
      DELETE FROM start_fans_rel WHERE start_id = #{sid} AND fans_id = #{fid}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.study.pojo.user.User" useGeneratedKeys="true">
    insert into user (`name`, username, `password`, 
      picture, register_date, validate_code, 
      out_date)
    values (#{name,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{picture,jdbcType=VARCHAR}, #{registerDate,jdbcType=TIMESTAMP}, #{validateCode,jdbcType=VARCHAR}, 
      #{outDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.study.pojo.user.User" useGeneratedKeys="true">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="picture != null">
        picture,
      </if>
      <if test="registerDate != null">
        register_date,
      </if>
      <if test="validateCode != null">
        validate_code,
      </if>
      <if test="outDate != null">
        out_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        #{picture,jdbcType=VARCHAR},
      </if>
      <if test="registerDate != null">
        #{registerDate,jdbcType=TIMESTAMP},
      </if>
      <if test="validateCode != null">
        #{validateCode,jdbcType=VARCHAR},
      </if>
      <if test="outDate != null">
        #{outDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <insert id="saveUserRoleRel">
      INSERT INTO user_role_rel (user_id, role_id) VALUES (#{uid}, #{rid})
    </insert>
    <insert id="insertStartFansRel">
      INSERT INTO start_fans_rel (start_id, fans_id) VALUE (#{sid}, #{fid})
    </insert>
    <select id="countByExample" parameterType="com.study.pojo.user.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="selectFansCountByUid" resultType="java.lang.Long">
    SELECT COUNT(*) FROM start_fans_rel WHERE start_id = #{uid}
  </select>
  <select id="selectFollowCountByUid" resultType="java.lang.Long">
    SELECT COUNT(*) FROM start_fans_rel WHERE fans_id = #{id}
  </select>
  <select id="selectFansIdsByStartId" resultType="java.lang.Long">
      SELECT fans_id FROM start_fans_rel WHERE start_id = #{id}
    </select>
  <select id="selectStartIdsByFansId" resultType="java.lang.Long">
    SELECT start_id FROM start_fans_rel WHERE fans_id = #{id}
  </select>
  <select id="selectFollowIdsBUid" resultType="java.lang.Long">
    SELECT start_id FROM start_fans_rel WHERE fans_id = #{id}
  </select>
  <select id="selectStartIByFansId" resultType="java.lang.Long">
    SELECT COUNT(*) FROM start_fans_rel WHERE start_id = #{sid} AND fans_id = #{fid}
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        `password` = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.picture != null">
        picture = #{record.picture,jdbcType=VARCHAR},
      </if>
      <if test="record.registerDate != null">
        register_date = #{record.registerDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.validateCode != null">
        validate_code = #{record.validateCode,jdbcType=VARCHAR},
      </if>
      <if test="record.outDate != null">
        out_date = #{record.outDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=BIGINT},
      `name` = #{record.name,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      `password` = #{record.password,jdbcType=VARCHAR},
      picture = #{record.picture,jdbcType=VARCHAR},
      register_date = #{record.registerDate,jdbcType=TIMESTAMP},
      validate_code = #{record.validateCode,jdbcType=VARCHAR},
      out_date = #{record.outDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.study.pojo.user.User">
    update user
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        picture = #{picture,jdbcType=VARCHAR},
      </if>
      <if test="registerDate != null">
        register_date = #{registerDate,jdbcType=TIMESTAMP},
      </if>
      <if test="validateCode != null">
        validate_code = #{validateCode,jdbcType=VARCHAR},
      </if>
      <if test="outDate != null">
        out_date = #{outDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.study.pojo.user.User">
    update user
    set `name` = #{name,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      picture = #{picture,jdbcType=VARCHAR},
      register_date = #{registerDate,jdbcType=TIMESTAMP},
      validate_code = #{validateCode,jdbcType=VARCHAR},
      out_date = #{outDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>