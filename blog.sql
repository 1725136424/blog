/*
Navicat MySQL Data Transfer

Source Server         : study
Source Server Version : 80016
Source Host           : localhost:3306
Source Database       : blog

Target Server Type    : MYSQL
Target Server Version : 80016
File Encoding         : 65001

Date: 2020-09-13 13:14:16
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for announcement
-- ----------------------------
DROP TABLE IF EXISTS `announcement`;
CREATE TABLE `announcement` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `picture` varchar(100) DEFAULT NULL,
  `content` varchar(3000) DEFAULT NULL,
  `title` varchar(255) DEFAULT NULL,
  `sort` int(10) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of announcement
-- ----------------------------
INSERT INTO `announcement` VALUES ('3', 'http://localhost:8080/static/upload/images/announcement/01cdf661c6844dd1ab9ae2f23ca1d1e1.jpg', '有事请询问本站站长', '重大消息', '1');

-- ----------------------------
-- Table structure for article
-- ----------------------------
DROP TABLE IF EXISTS `article`;
CREATE TABLE `article` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) DEFAULT NULL,
  `sub_title` varchar(255) DEFAULT NULL,
  `content` longtext CHARACTER SET utf8 COLLATE utf8_general_ci,
  `picture` varchar(200) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `publish_date` datetime DEFAULT NULL,
  `edit_date` datetime DEFAULT NULL,
  `user_id` bigint(20) DEFAULT NULL,
  `category_id` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `user_id` (`user_id`),
  KEY `category_id` (`category_id`),
  CONSTRAINT `article_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `user` (`id`),
  CONSTRAINT `article_ibfk_2` FOREIGN KEY (`category_id`) REFERENCES `category` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=29 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of article
-- ----------------------------
INSERT INTO `article` VALUES ('7', '一起进阶学习JAVA：Spring MVC', '一起进阶学习JAVA：Spring MVC 应用    什么', '<h2>一起进阶学习JAVA：Spring MVC 应用</h2><p><span label=\"明显强调\" style=\"font-size: 16px; font-style: italic; font-weight: bold; color: rgb(51, 153, 204); line-height: 18px;\">&nbsp;&nbsp;&nbsp;&nbsp;什么是MVC</span></p><p><span label=\"明显强调\" style=\"font-size: 16px; font-style: italic; font-weight: bold; color: rgb(51, 153, 204); line-height: 18px;\">&nbsp;&nbsp;&nbsp;&nbsp;什么是Spring MVC</span></p><p><span label=\"明显强调\" style=\"font-size: 16px; font-style: italic; font-weight: bold; color: rgb(51, 153, 204); line-height: 18px;\">&nbsp;&nbsp;&nbsp;&nbsp;Spring MVC的请求处理流程</span></p><p><span label=\"明显强调\" style=\"font-size: 16px; font-style: italic; font-weight: bold; color: rgb(51, 153, 204); line-height: 18px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;步骤说明</span></p><p><span label=\"明显强调\" style=\"font-size: 16px; font-style: italic; font-weight: bold; color: rgb(51, 153, 204); line-height: 18px;\">&nbsp;&nbsp;&nbsp;&nbsp;Spring MVC核心组件</span></p><p><span label=\"明显强调\" style=\"font-size: 16px; font-style: italic; font-weight: bold; color: rgb(51, 153, 204); line-height: 18px;\">&nbsp;&nbsp;&nbsp;&nbsp;Spring MVC中的参数绑定</span></p><p><span label=\"明显强调\" style=\"font-size: 16px; font-style: italic; font-weight: bold; color: rgb(51, 153, 204); line-height: 18px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;与原生Servlet的不同</span></p><p><span label=\"明显强调\" style=\"font-size: 16px; font-style: italic; font-weight: bold; color: rgb(51, 153, 204); line-height: 18px;\">&nbsp;&nbsp;&nbsp;&nbsp;Spring MVC对RESTful风格的支持</span></p><p><span label=\"明显强调\" style=\"font-size: 16px; font-style: italic; font-weight: bold; color: rgb(51, 153, 204); line-height: 18px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Restful的优点</span></p><p><span label=\"明显强调\" style=\"font-size: 16px; font-style: italic; font-weight: bold; color: rgb(51, 153, 204); line-height: 18px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Restful请求</span></p><p><span label=\"明显强调\" style=\"font-size: 16px; font-style: italic; font-weight: bold; color: rgb(51, 153, 204); line-height: 18px;\">&nbsp;&nbsp;&nbsp;&nbsp;Spring MVC的JSON交互</span></p><p><span label=\"明显强调\" style=\"font-size: 16px; font-style: italic; font-weight: bold; color: rgb(51, 153, 204); line-height: 18px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Spring MVC使用JSON格式交互需要引用JSON相关的jar包用以支持</span></p><p><span label=\"明显强调\" style=\"font-size: 16px; font-style: italic; font-weight: bold; color: rgb(51, 153, 204); line-height: 18px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在Handler方法的参数上需要标识注解@RequestBody用于表示当前参数是以JSON格式传入，</span></p><p><span label=\"明显强调\" style=\"font-size: 16px; font-style: italic; font-weight: bold; color: rgb(51, 153, 204); line-height: 18px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在方法上或者方法的返回参数前标识注解@ResponseBody用于表示当前返回参数是以JSON格式传递</span></p><p><br/></p>', 'http://localhost:8080/static/upload/images/article/cover/80b0094feab0465699bf28a2af9e25d2.jpg', '2020-07-24 05:18:04', '2020-07-24 05:19:25', '1', '9');
INSERT INTO `article` VALUES ('8', '字典（2）', '字典21.遍历字典所有的键值对。使用方法items()。co', '<h1 id=\"articleContentId\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 28px; overflow-wrap: break-word; color: rgb(34, 34, 38); word-break: break-all; white-space: normal; background-color: rgb(255, 255, 255); text-indent: 2em; text-align: left;\">字典2</h1><p style=\"text-indent: 2em; text-align: left;\"><span style=\"color: rgb(77, 77, 77); font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; background-color: rgb(255, 255, 255);\">1.遍历字典所有的键值对。使用方法items()。</span></p><pre>country&nbsp;=&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&#39;Amy&#39;:&nbsp;&#39;england&#39;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&#39;Wang&nbsp;Wei&#39;:&nbsp;&#39;china&#39;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&#39;Tom&#39;:&nbsp;&#39;American&#39;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&#39;Jin&nbsp;Xi&nbsp;san&#39;:&nbsp;&#39;Korea&#39;,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&#39;Zion&nbsp;Hang&#39;:&nbsp;&#39;China&#39;,\r\n}\r\nfor&nbsp;key,&nbsp;value&nbsp;in&nbsp;country.items():\r\nprint(&quot;\\nname:&quot;&nbsp;+&nbsp;key,&nbsp;&quot;country:&quot;&nbsp;+&nbsp;value.title())\r\n------------------------------------------------------\r\nname:Amy&nbsp;country:England\r\nname:Wang&nbsp;Wei&nbsp;country:China\r\nname:Tom&nbsp;country:American\r\nname:Jin&nbsp;Xi&nbsp;san&nbsp;country:Korea\r\nname:Zion&nbsp;Hang&nbsp;country:China</pre><p style=\"text-indent: 2em; text-align: left;\"><span style=\"color: rgb(77, 77, 77); font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; background-color: rgb(255, 255, 255);\"><br/></span></p><p style=\"text-indent: 2em; text-align: left;\"><span style=\"color: rgb(77, 77, 77); font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; background-color: rgb(255, 255, 255);\">2.1遍历字典中的所有键。使用方法keys()。在遍历字典的时候，会默认遍历字典的所有键，所以省略方法keys()效果是一样的&nbsp;。</span></p><pre class=\"brush:python;toolbar:false\">for&nbsp;key&nbsp;in&nbsp;country.keys():\r\nprint(&quot;name:&quot;+key)\r\nfor&nbsp;key&nbsp;in&nbsp;country:\r\nprint(&quot;name:&quot;+key)\r\n-------------------------------\r\nname:Amy\r\nname:Wang&nbsp;Wei\r\nname:Tom\r\nname:Jin&nbsp;Xi&nbsp;san\r\nname:Zion&nbsp;Hang\r\nname:Amy\r\nname:Wang&nbsp;Wei\r\nname:Tom\r\nname:Jin&nbsp;Xi&nbsp;san\r\nname:Zion&nbsp;Hang</pre><p style=\"text-indent: 2em; text-align: left;\"><br/></p><p style=\"text-indent: 2em; text-align: left;\"><span style=\"color: rgb(77, 77, 77); font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; background-color: rgb(255, 255, 255);\">2.2在遍历字典，输出的时候是不管顺序的，为了按照顺序输出，就需要用到一些函数。例如让键按照字母顺序输出。</span></p><pre class=\"brush:python;toolbar:false\">for&nbsp;key&nbsp;in&nbsp;sorted(country.keys()):\r\n&nbsp;&nbsp;&nbsp;&nbsp;print(key.title()+&quot;,&nbsp;Thank&nbsp;you&nbsp;for&nbsp;my&nbsp;talk!&quot;)\r\n--------------------------------------------------\r\nAmy,&nbsp;Thank&nbsp;you&nbsp;for&nbsp;my&nbsp;talk!\r\nJin&nbsp;Xi&nbsp;San,&nbsp;Thank&nbsp;you&nbsp;for&nbsp;my&nbsp;talk!\r\nTom,&nbsp;Thank&nbsp;you&nbsp;for&nbsp;my&nbsp;talk!\r\nWang&nbsp;Wei,&nbsp;Thank&nbsp;you&nbsp;for&nbsp;my&nbsp;talk!\r\nZion&nbsp;Hang,&nbsp;Thank&nbsp;you&nbsp;for&nbsp;my&nbsp;talk!</pre><p style=\"text-indent: 2em; text-align: left;\"><br/></p><p style=\"text-indent: 2em; text-align: left;\"><span style=\"color: rgb(77, 77, 77); font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; background-color: rgb(255, 255, 255);\">3.1遍历字典中的所有值，使用方法values()。</span></p><pre class=\"brush:python;toolbar:false\">for&nbsp;value&nbsp;in&nbsp;country.values():\r\nprint(value.title())\r\n----------------------------------\r\nEngland\r\nChina\r\nAmerican\r\nKorea\r\nChina</pre><p style=\"text-indent: 2em; text-align: left;\"><br/></p><p style=\"text-indent: 2em; text-align: left;\"><span style=\"color: rgb(77, 77, 77); font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; background-color: rgb(255, 255, 255);\">3.2在遍历字典中的所有值时，如果字典中的值很少的时候，用方法values()。但是值很多的时候，难免会出现重复的情况，有时我们需要统计所有值，但不希望有重复的情况，这时调用集合set。</span></p><pre class=\"brush:python;toolbar:false\">favorite_languages&nbsp;=&nbsp;{\r\n&#39;jen&#39;:&nbsp;&#39;python&#39;,\r\n&#39;sarah&#39;:&nbsp;&#39;c&#39;,\r\n&#39;edward&#39;:&nbsp;&#39;ruby&#39;,\r\n&#39;phil&#39;:&nbsp;&#39;python&#39;,\r\n}\r\nprint(&quot;The&nbsp;following&nbsp;languages&nbsp;have&nbsp;been&nbsp;mentioned:&quot;)\r\nfor&nbsp;language&nbsp;in&nbsp;set(favorite_languages.values()):\r\nprint(language.title())\r\n------------------------------------------------------\r\nThe&nbsp;following&nbsp;languages&nbsp;have&nbsp;been&nbsp;mentioned:\r\nC\r\nRuby\r\nPython</pre><p style=\"text-indent: 2em; text-align: left;\"><span style=\"color: rgb(77, 77, 77); font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; background-color: rgb(255, 255, 255);\"></span><br/></p>', 'http://localhost:8080/static/upload/images/article/cover/cff31ea7b1be4d969a6f5d2aa8524d7f.jfif', '2020-07-28 12:30:58', '2020-07-28 12:55:29', '1', '3');
INSERT INTO `article` VALUES ('14', 'Timer定时器用法详解', 'Timer定时器用法详解/**    timer总结：   ', '<h1 id=\"articleContentId\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 28px; overflow-wrap: break-word; color: rgb(34, 34, 38); word-break: break-all; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">Timer定时器用法详解</h1><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">/**<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;timer总结：<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;Timer timer = new Timer();&nbsp;&nbsp; &nbsp;//其中会调用this(&quot;Timer-&quot; + serialNumber());, 即它以Timer+序列号为该定时器的名字<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;Timer timer = new Timer(String name);&nbsp;&nbsp; &nbsp;//以name作为该定时器的名字<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;Timer timer = new Timer(boolean isDeamon);&nbsp;&nbsp; &nbsp;//是否将此定时器作为守护线程执行<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;Timer timer = new Timer(name, isDeamon);&nbsp;&nbsp; &nbsp;//定时器名字, 是否为守护线程<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;注意：<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;默认无参构造器将会使该线程作为非守护线程, 即使主线程已经停止并销毁, 只要该线程还存在, 则程序不会停止<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;即下面的所有执行的任务, 无论是否是定时还是非定时, 只要主线程一旦结束, 那么该定时器立即同主线程一起销毁<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;以下所有的task都是TimerTask的子类<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;所有time都是Date类型的日期<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;所有delay和period都是long类型的延迟时间, 单位为毫秒<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;timer.schedule(task, time);&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;在time时间执行task任务1次<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;timer.schedule(task, delay);&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;在延迟delay毫秒后执行task任务1次<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;timer.schedule(task, firstTime, period);&nbsp;&nbsp; &nbsp;在firsttime时间执行task1次，之后定期period毫秒时间执行task,&nbsp;&nbsp; &nbsp;时间如果为过去时间, 不会执行过去没有执行的任务, 但是会马上执行<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;timer.schedule(task, delay, period);&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;在延迟delay后执行task1次，之后定期period毫秒时间执行task, &nbsp;&nbsp; &nbsp;时间如果为过去时间, 不会执行过去没有执行的任务, 但是会马上执行<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;timer.scheduleAtFixedRate(task, firstTime, period);&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;在firstTime时间执行task一次, 以后每隔period毫秒执行1次, 时间如果为过去时间, 会执行过去没有执行的任务, 但是会马上执行<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;timer.scheduleAtFixedRate(task, delay, period);&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;在delay毫秒后执行task一次, 以后每隔period毫秒执行1次, 时间如果为过去时间, 会执行过去没有执行的任务, 但是会马上执行<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;区别：test4();<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;timer.schedule(task, firstTime, period);<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;timer.scheduleAtFixedRate(task, firstTime, period);<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;从test4运行结果可以看到, 如果开始时间在过去, 则<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;schedule会表现出只从当前时间开始,<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;scheduleAtFixedRate会把之前没有来得及执行的任务全都执行, 感觉像之前一直有在执行一样<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;区别: test5()<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;timer.schedule(task, time);<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;timer.schedule(task, delay);<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;其中, 如果time时间为过去时间, 则该任务会马上执行, 如果为将来时间, 则会等待时间到来再执行<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;如果传入的是delay, 则delay不可以为负数, 负数报错, 正数代表未来的delay毫秒以后执行<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;小结：<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;时间如果为过去时间, 则所有scheduke和scheduleAtFixedRate都会立即执行<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;并且scheduke不会执行过去的任务, 而scheduleAtFixedRate则会把过去的任务全都执行, 即按照固定时间执行一样<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;isDeamon决定是否该Timer以守护线程存在</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">&nbsp;&nbsp; &nbsp;timer.purge();<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;先看英文描述：<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;Removes all cancelled tasks from this timer&#39;s task queue. Calling this method has no effect on the behavior of the timer, but eliminates the references to the cancelled tasks from the queue. If there are no external references to these tasks, they become eligible for garbage collection.&nbsp;<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;Most programs will have no need to call this method. It is designed for use by the rare application that cancels a large number of tasks. Calling this method trades time for space: the runtime of the method may be proportional to n + c log n, where n is the number of tasks in the queue and c is the number of cancelled tasks.&nbsp;<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;Note that it is permissible to call this method from within a a task scheduled on this timer.<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;Returns:<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;the number of tasks removed from the queue.<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;Since:<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;1.5<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;即purge();对实际的timer的任务执行不会有影响, 它仅仅只会移除所有被取消的任务队列的引用以方便垃圾回收, 通常不用调用此方法, 只有任务数非常多(n + c log n)的时候, 可以调用此方法以时间换取空间.<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;timer.cancel();<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;Terminates this timer, discarding any currently scheduled tasks. Does not interfere with a currently executing task (if it exists). Once a timer has been terminated, its execution thread terminates gracefully, and no more tasks may be scheduled on it.&nbsp;<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;Note that calling this method from within the run method of a timer task that was invoked by this timer absolutely guarantees that the ongoing task execution is the last task execution that will ever be performed by this timer.&nbsp;<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;This method may be called repeatedly; the second and subsequent calls have no effect.<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;&nbsp; &nbsp;即cancel();停止该timer, 并且丢弃所有绑定的任务, 但不干预当前正在执行的任务。一旦timer停止了, 那么其执行线程将会优雅终止, 并且该timer不可以再绑定task任务了<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp;*/</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">再看测试代码：</p><pre>import&nbsp;java.util.Calendar;\r\nimport&nbsp;java.util.Date;\r\nimport&nbsp;java.util.Timer;\r\nimport&nbsp;java.util.TimerTask;\r\n/**\r\n	timer总结：\r\n	Timer&nbsp;timer&nbsp;=&nbsp;new&nbsp;Timer();	//其中会调用this(&quot;Timer-&quot;&nbsp;+&nbsp;serialNumber());,&nbsp;即它以Timer+序列号为该定时器的名字\r\n	Timer&nbsp;timer&nbsp;=&nbsp;new&nbsp;Timer(String&nbsp;name);	//以name作为该定时器的名字\r\n	Timer&nbsp;timer&nbsp;=&nbsp;new&nbsp;Timer(boolean&nbsp;isDeamon);	//是否将此定时器作为守护线程执行\r\n	Timer&nbsp;timer&nbsp;=&nbsp;new&nbsp;Timer(name,&nbsp;isDeamon);	//定时器名字,&nbsp;是否为守护线程\r\n	\r\n	注意：\r\n	默认无参构造器将会使该线程作为非守护线程,&nbsp;即使主线程已经停止并销毁,&nbsp;只要该线程还存在,&nbsp;则程序不会停止\r\n	即下面的所有执行的任务,&nbsp;无论是否是定时还是非定时,&nbsp;只要主线程一旦结束,&nbsp;那么该定时器立即同主线程一起销毁\r\n	\r\n	以下所有的task都是TimerTask的子类\r\n	所有time都是Date类型的日期\r\n	所有delay和period都是long类型的延迟时间,&nbsp;单位为毫秒\r\n	timer.schedule(task,&nbsp;time);					在time时间执行task任务1次\r\n	timer.schedule(task,&nbsp;delay);				在延迟delay毫秒后执行task任务1次\r\n	timer.schedule(task,&nbsp;firstTime,&nbsp;period);	在firsttime时间执行task1次，之后定期period毫秒时间执行task,	时间如果为过去时间,&nbsp;不会执行过去没有执行的任务,&nbsp;但是会马上执行\r\n	timer.schedule(task,&nbsp;delay,&nbsp;period);		在延迟delay后执行task1次，之后定期period毫秒时间执行task,&nbsp;	时间如果为过去时间,&nbsp;不会执行过去没有执行的任务,&nbsp;但是会马上执行\r\n	\r\n	timer.scheduleAtFixedRate(task,&nbsp;firstTime,&nbsp;period);		在firstTime时间执行task一次,&nbsp;以后每隔period毫秒执行1次,&nbsp;时间如果为过去时间,&nbsp;会执行过去没有执行的任务,&nbsp;但是会马上执行\r\n	timer.scheduleAtFixedRate(task,&nbsp;delay,&nbsp;period);			在delay毫秒后执行task一次,&nbsp;以后每隔period毫秒执行1次,&nbsp;时间如果为过去时间,&nbsp;会执行过去没有执行的任务,&nbsp;但是会马上执行\r\n	\r\n	区别：test4();\r\n	timer.schedule(task,&nbsp;firstTime,&nbsp;period);\r\n	timer.scheduleAtFixedRate(task,&nbsp;firstTime,&nbsp;period);\r\n	从test4运行结果可以看到,&nbsp;如果开始时间在过去,&nbsp;则\r\n		schedule会表现出只从当前时间开始,\r\n		scheduleAtFixedRate会把之前没有来得及执行的任务全都执行,&nbsp;感觉像之前一直有在执行一样\r\n		\r\n	区别:&nbsp;test5()\r\n	timer.schedule(task,&nbsp;time);\r\n	timer.schedule(task,&nbsp;delay);\r\n	其中,&nbsp;如果time时间为过去时间,&nbsp;则该任务会马上执行,&nbsp;如果为将来时间,&nbsp;则会等待时间到来再执行\r\n	如果传入的是delay,&nbsp;则delay不可以为负数,&nbsp;负数报错,&nbsp;正数代表未来的delay毫秒以后执行\r\n	\r\n	\r\n	小结：\r\n		时间如果为过去时间,&nbsp;则所有scheduke和scheduleAtFixedRate都会立即执行\r\n		并且scheduke不会执行过去的任务,&nbsp;而scheduleAtFixedRate则会把过去的任务全都执行,&nbsp;即按照固定时间执行一样\r\n		isDeamon决定是否该Timer以守护线程存在\r\n	timer.purge();\r\n	先看英文描述：\r\n	Removes&nbsp;all&nbsp;cancelled&nbsp;tasks&nbsp;from&nbsp;this&nbsp;timer&#39;s&nbsp;task&nbsp;queue.&nbsp;Calling&nbsp;this&nbsp;method&nbsp;has&nbsp;no&nbsp;effect&nbsp;on&nbsp;the&nbsp;behavior&nbsp;of&nbsp;the&nbsp;timer,&nbsp;but&nbsp;eliminates&nbsp;the&nbsp;references&nbsp;to&nbsp;the&nbsp;cancelled&nbsp;tasks&nbsp;from&nbsp;the&nbsp;queue.&nbsp;If&nbsp;there&nbsp;are&nbsp;no&nbsp;external&nbsp;references&nbsp;to&nbsp;these&nbsp;tasks,&nbsp;they&nbsp;become&nbsp;eligible&nbsp;for&nbsp;garbage&nbsp;collection.&nbsp;\r\n	Most&nbsp;programs&nbsp;will&nbsp;have&nbsp;no&nbsp;need&nbsp;to&nbsp;call&nbsp;this&nbsp;method.&nbsp;It&nbsp;is&nbsp;designed&nbsp;for&nbsp;use&nbsp;by&nbsp;the&nbsp;rare&nbsp;application&nbsp;that&nbsp;cancels&nbsp;a&nbsp;large&nbsp;number&nbsp;of&nbsp;tasks.&nbsp;Calling&nbsp;this&nbsp;method&nbsp;trades&nbsp;time&nbsp;for&nbsp;space:&nbsp;the&nbsp;runtime&nbsp;of&nbsp;the&nbsp;method&nbsp;may&nbsp;be&nbsp;proportional&nbsp;to&nbsp;n&nbsp;+&nbsp;c&nbsp;log&nbsp;n,&nbsp;where&nbsp;n&nbsp;is&nbsp;the&nbsp;number&nbsp;of&nbsp;tasks&nbsp;in&nbsp;the&nbsp;queue&nbsp;and&nbsp;c&nbsp;is&nbsp;the&nbsp;number&nbsp;of&nbsp;cancelled&nbsp;tasks.&nbsp;\r\n	Note&nbsp;that&nbsp;it&nbsp;is&nbsp;permissible&nbsp;to&nbsp;call&nbsp;this&nbsp;method&nbsp;from&nbsp;within&nbsp;a&nbsp;a&nbsp;task&nbsp;scheduled&nbsp;on&nbsp;this&nbsp;timer.\r\n	Returns:\r\n	the&nbsp;number&nbsp;of&nbsp;tasks&nbsp;removed&nbsp;from&nbsp;the&nbsp;queue.\r\n	Since:\r\n	1.5\r\n	即purge();对实际的timer的任务执行不会有影响,&nbsp;它仅仅只会移除所有被取消的任务队列的引用以方便垃圾回收,&nbsp;通常不用调用此方法,&nbsp;只有任务数非常多(n&nbsp;+&nbsp;c&nbsp;log&nbsp;n)的时候,&nbsp;可以调用此方法以时间换取空间.\r\n	\r\n	timer.cancel();\r\n	Terminates&nbsp;this&nbsp;timer,&nbsp;discarding&nbsp;any&nbsp;currently&nbsp;scheduled&nbsp;tasks.&nbsp;Does&nbsp;not&nbsp;interfere&nbsp;with&nbsp;a&nbsp;currently&nbsp;executing&nbsp;task&nbsp;(if&nbsp;it&nbsp;exists).&nbsp;Once&nbsp;a&nbsp;timer&nbsp;has&nbsp;been&nbsp;terminated,&nbsp;its&nbsp;execution&nbsp;thread&nbsp;terminates&nbsp;gracefully,&nbsp;and&nbsp;no&nbsp;more&nbsp;tasks&nbsp;may&nbsp;be&nbsp;scheduled&nbsp;on&nbsp;it.&nbsp;\r\n	Note&nbsp;that&nbsp;calling&nbsp;this&nbsp;method&nbsp;from&nbsp;within&nbsp;the&nbsp;run&nbsp;method&nbsp;of&nbsp;a&nbsp;timer&nbsp;task&nbsp;that&nbsp;was&nbsp;invoked&nbsp;by&nbsp;this&nbsp;timer&nbsp;absolutely&nbsp;guarantees&nbsp;that&nbsp;the&nbsp;ongoing&nbsp;task&nbsp;execution&nbsp;is&nbsp;the&nbsp;last&nbsp;task&nbsp;execution&nbsp;that&nbsp;will&nbsp;ever&nbsp;be&nbsp;performed&nbsp;by&nbsp;this&nbsp;timer.&nbsp;\r\n	This&nbsp;method&nbsp;may&nbsp;be&nbsp;called&nbsp;repeatedly;&nbsp;the&nbsp;second&nbsp;and&nbsp;subsequent&nbsp;calls&nbsp;have&nbsp;no&nbsp;effect.\r\n	即cancel();停止该timer,&nbsp;并且丢弃所有绑定的任务,&nbsp;但不干预当前正在执行的任务。一旦timer停止了,&nbsp;那么其执行线程将会优雅终止,&nbsp;并且该timer不可以再绑定task任务了\r\n	\r\n	\r\n&nbsp;*/\r\npublic&nbsp;class&nbsp;TimerTest&nbsp;{\r\n	public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{\r\n//		test1();		//测试schedule功能\r\n//		test2();		//测试所有scheduleAtFixedRate功能\r\n//		test3();		//测试isDeamon对Timer的影响\r\n//		test4();		//测试AtFixedRateSchedule和schedule区别\r\n//		test5();		//测试schedule在过去时间的表现,&nbsp;如果firstTime是过去时间,&nbsp;则立即执行,&nbsp;如果是未来时间,&nbsp;则会等待时间到之后执行,&nbsp;如果是传入延迟时间,&nbsp;则延迟时间不能为负数,&nbsp;否则报错\r\n//		test6();		\r\n		test7();\r\n	}\r\n	\r\n	public&nbsp;static&nbsp;void&nbsp;test1()\r\n	{\r\n		Timer&nbsp;timer&nbsp;=&nbsp;new&nbsp;Timer();\r\n		timer.schedule(new&nbsp;TimerTask()&nbsp;{\r\n			@Override\r\n			public&nbsp;void&nbsp;run()&nbsp;{\r\n				System.out.println(&quot;执行了1次&quot;);\r\n			}\r\n		},&nbsp;1000);\r\n		\r\n		timer.schedule(new&nbsp;TimerTask()&nbsp;{\r\n			@Override\r\n			public&nbsp;void&nbsp;run()&nbsp;{\r\n				System.out.println(&quot;执行了2次&quot;);\r\n			}\r\n		},&nbsp;getDelayTime(2));\r\n		\r\n		//第3和第4个task的执行顺序是不确定的,因为时间片的切换导致的微小差别\r\n		timer.schedule(new&nbsp;TimerTask()&nbsp;{\r\n			@Override\r\n			public&nbsp;void&nbsp;run()&nbsp;{\r\n				System.out.println(&quot;执行了3次&quot;);\r\n			}\r\n		},&nbsp;getDelayTime(3),&nbsp;1000);	//3,&nbsp;-3\r\n		\r\n		timer.schedule(new&nbsp;TimerTask()&nbsp;{\r\n			@Override\r\n			public&nbsp;void&nbsp;run()&nbsp;{\r\n				System.err.println(&quot;执行了4次&quot;);\r\n			}\r\n		},&nbsp;1000,&nbsp;1000);\r\n	}\r\n	public&nbsp;static&nbsp;void&nbsp;test2()\r\n	{\r\n		Timer&nbsp;timer&nbsp;=&nbsp;new&nbsp;Timer();\r\n		timer.scheduleAtFixedRate(new&nbsp;TimerTask()&nbsp;{\r\n			@Override\r\n			public&nbsp;void&nbsp;run()&nbsp;{\r\n				System.out.println(&quot;AtFixedRate1&quot;);\r\n			}\r\n		},&nbsp;getDelayTime(1),&nbsp;1000);\r\n		\r\n		timer.scheduleAtFixedRate(new&nbsp;TimerTask()&nbsp;{\r\n			@Override\r\n			public&nbsp;void&nbsp;run()&nbsp;{\r\n				System.out.println(&quot;AtFixedRate2&quot;);\r\n			}\r\n		},&nbsp;2000,&nbsp;1000);\r\n	}\r\n	\r\n	public&nbsp;static&nbsp;void&nbsp;test3()\r\n	{\r\n		Timer&nbsp;timer&nbsp;=&nbsp;new&nbsp;Timer(&quot;isDeamon&quot;,&nbsp;true);\r\n		timer.schedule(new&nbsp;TimerTask()&nbsp;{\r\n			@Override\r\n			public&nbsp;void&nbsp;run()&nbsp;{\r\n				System.out.println(&quot;isDeamon&quot;);\r\n				try&nbsp;{\r\n					Thread.sleep(10000);\r\n				}&nbsp;catch&nbsp;(InterruptedException&nbsp;e)&nbsp;{\r\n					//&nbsp;TODO&nbsp;Auto-generated&nbsp;catch&nbsp;block\r\n					e.printStackTrace();\r\n				}\r\n			}\r\n		},&nbsp;getDelayTime(2),&nbsp;2000);\r\n	}\r\n	\r\n	public&nbsp;static&nbsp;void&nbsp;test4()\r\n	{\r\n		Timer&nbsp;timer&nbsp;=&nbsp;new&nbsp;Timer(&quot;AtFixedRate&quot;,&nbsp;false);\r\n		timer.schedule(new&nbsp;TimerTask()&nbsp;{\r\n			@Override\r\n			public&nbsp;void&nbsp;run()&nbsp;{\r\n				System.out.println(&quot;schedule&quot;);\r\n			}\r\n		},&nbsp;getDelayTime(-5),&nbsp;2000);\r\n		\r\n		timer.scheduleAtFixedRate(new&nbsp;TimerTask()&nbsp;{\r\n			@Override\r\n			public&nbsp;void&nbsp;run()&nbsp;{\r\n				System.out.println(&quot;scheduleAtFixedRate&quot;);\r\n			}\r\n		},&nbsp;getDelayTime(-5),&nbsp;2000);\r\n	}\r\n	\r\n	public&nbsp;static&nbsp;void&nbsp;test5()\r\n	{\r\n		Timer&nbsp;timer&nbsp;=&nbsp;new&nbsp;Timer();\r\n		timer.schedule(new&nbsp;TimerTask()&nbsp;{\r\n			@Override\r\n			public&nbsp;void&nbsp;run()&nbsp;{\r\n				System.out.println(&quot;测试时间为过去时间和将来时间对schedule的影响&quot;);\r\n			}\r\n		},&nbsp;getDelayTime(-5));	//立即执行\r\n	}\r\n	\r\n	public&nbsp;static&nbsp;void&nbsp;test6()\r\n	{\r\n		//purge:&nbsp;清洗,&nbsp;净化\r\n		Timer&nbsp;timer&nbsp;=&nbsp;new&nbsp;Timer();\r\n		timer.schedule(new&nbsp;TimerTask()&nbsp;{\r\n			@Override\r\n			public&nbsp;void&nbsp;run()&nbsp;{\r\n				System.out.println(&quot;测试purge1&quot;);\r\n			}\r\n		},&nbsp;getDelayTime(1),&nbsp;1000);\r\n		System.out.println(&quot;purge:&nbsp;&quot;+timer.purge());\r\n		timer.schedule(new&nbsp;TimerTask()&nbsp;{\r\n			@Override\r\n			public&nbsp;void&nbsp;run()&nbsp;{\r\n				System.out.println(&quot;测试purge2&quot;);\r\n			}\r\n		},&nbsp;getDelayTime(1),&nbsp;1000);\r\n	}\r\n	\r\n	public&nbsp;static&nbsp;void&nbsp;test7()\r\n	{\r\n		//将7和6对比看\r\n		Timer&nbsp;timer&nbsp;=&nbsp;new&nbsp;Timer();\r\n		class&nbsp;MyTimerTask&nbsp;extends&nbsp;TimerTask{\r\n			@Override\r\n			public&nbsp;void&nbsp;run()&nbsp;{\r\n				System.out.println(&quot;测试purge1&quot;);\r\n				this.cancel();\r\n			}\r\n		}\r\n		for(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&lt;100;&nbsp;i++)\r\n		{\r\n			MyTimerTask&nbsp;mt&nbsp;=&nbsp;new&nbsp;MyTimerTask();\r\n			timer.schedule(mt,&nbsp;getDelayTime(1),&nbsp;1000);\r\n			mt.cancel();\r\n		}\r\n//		timer.cancel();\r\n		System.out.println(&quot;此时可以移除取消的任务数为100个:&nbsp;&quot;+timer.purge());\r\n		/*timer.schedule(new&nbsp;TimerTask()&nbsp;{\r\n			@Override\r\n			public&nbsp;void&nbsp;run()&nbsp;{\r\n				System.out.println(&quot;我现在还可以执行~~&quot;);\r\n			}\r\n		},&nbsp;getDelayTime(2));*/\r\n		\r\n		////////////////////////////////////////\r\n		for(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&lt;100;&nbsp;i++)\r\n		{\r\n			MyTimerTask&nbsp;mt&nbsp;=&nbsp;new&nbsp;MyTimerTask();\r\n			mt.cancel();\r\n			timer.schedule(mt,&nbsp;getDelayTime(1),&nbsp;1000);\r\n		}\r\n		System.out.println(&quot;此时可以移除取消的任务数为100个:&nbsp;&quot;+timer.purge());\r\n		///////////////////////////////////////\r\n	}\r\n	\r\n	//给定一个时间，返回给定多久以后的Date\r\n	public&nbsp;static&nbsp;Date&nbsp;getDelayTime(int&nbsp;howlong)\r\n	{\r\n		Calendar&nbsp;cld&nbsp;=&nbsp;Calendar.getInstance();\r\n		cld.set(Calendar.SECOND,&nbsp;howlong+cld.get(Calendar.SECOND));\r\n		return&nbsp;cld.getTime();\r\n	}\r\n}</pre><p><br style=\"text-align: left;\"/></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">其中难点只有这个purge的使用，下面这篇文章详细解释了purge在queue队列非常大时如何避免内存泄漏的</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a href=\"https://my.oschina.net/u/3536632/blog/2961285\" rel=\"nofollow\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; text-decoration-line: none; cursor: pointer; color: rgb(103, 149, 181); overflow-wrap: break-word;\">Java定时任务Timer调度器【三】 注意事项（任务精确性与内存泄漏）</a></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">这里有个问题待考虑：为什么purge()返回值一直是0，我已经将TimerTask任务取消，但是返回的purge()还是0.这点很奇怪。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">其他类似文章：</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a href=\"https://blog.csdn.net/u013164931/article/details/80762356\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; text-decoration-line: none; cursor: pointer; color: rgb(103, 149, 181); overflow-wrap: break-word;\">定时器Timer</a></p><p><br style=\"text-align: left;\"/></p>', 'http://localhost:8080/static/upload/images/article/cover/74cde9e850be4adf85cdc9ced835ed52.jfif', '2020-07-28 13:34:39', '2020-07-28 13:34:39', '1', '1');
INSERT INTO `article` VALUES ('15', 'spring 常见面试题', 'spring 常见面试题1、什么是spring、为什么要用s', '<h1 id=\"articleContentId\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 28px; overflow-wrap: break-word; color: rgb(34, 34, 38); word-break: break-all; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">spring 常见面试题</h1><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;\">1、什么是spring、为什么要用spring及其优点、spring有哪些模块组成 ?</span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">什么是spring</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">Spring 是个Java企业级应用的开源开发框架。Spring主要用来开发Java应用，但是有些扩展是针对构建J2EE平台的web应用。Spring 框架目标是简化Java企业级应用开发，它使得开发者只需要关心业务需求。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">spring优点</p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p style=\"text-align: left;\">spring属于低侵入式设计，代码的污染极低；</p></li><li><p style=\"text-align: left;\">spring的DI机制将对象之间的依赖关系交由框架处理，减低组件的耦合性；</p></li><li><p style=\"text-align: left;\">Spring提供了AOP技术，支持将一些通用任务，如安全、事务、日志、权限等进行集中式管理，从而提供更好的复用。</p></li><li><p style=\"text-align: left;\">spring对于主流的应用框架提供了集成支持。</p></li></ul><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">spring有哪些模块组成</p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p style=\"text-align: left;\">Spring Core：核心类库，提供IOC服务；</p></li><li><p style=\"text-align: left;\">Spring Context：提供框架式的Bean访问方式，以及企业级功能（JNDI、定时任务等）；</p></li><li><p style=\"text-align: left;\">Spring AOP：AOP服务；</p></li><li><p style=\"text-align: left;\">Spring DAO：对JDBC的抽象，简化了数据访问异常的处理；</p></li><li><p style=\"text-align: left;\">Spring ORM：对现有的ORM框架的支持；</p></li><li><p style=\"text-align: left;\">Spring Web：提供了基本的面向Web的综合特性，例如多方文件上传；</p></li><li><p style=\"text-align: left;\">Spring MVC：提供面向Web应用的Model-View-Controller实现。</p></li></ul><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;\">2、什么是IOC、DI&nbsp; &nbsp; 及其两者的优点 、 有哪几种注入方式</span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">IOC:控制反转，把创建对象的控制权利由代码转移到spring的配置文件中。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">最直观的表达就是，IOC让对象的创建不用去new了，可以由spring自动生产，使用java的反射机制，根据配置文件在运行时动态的去创建对象以及管理对象，并调用对象的方法的。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">DI：依赖注入，在程序运行期间,由外部容器动态地将依赖对象注入到组件中。简单定义就是当一个对象需要另一个对象时，可以把另一个对象注入到对象中去。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">优点就是把应用的代码量降到最低，达到松散耦合度。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">注入的方式：</p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p style=\"text-align: left;\">构造注入</p></li><li><p style=\"text-align: left;\">Set注入</p></li><li><p style=\"text-align: left;\">接口注入</p></li></ul><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">Spring提供以下几种集合的配置元素：</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">&nbsp; &nbsp;&lt;list&gt;类型用于注入一列值，允许有相同的值。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">&nbsp; &nbsp;&lt;set&gt; 类型用于注入一组值，不允许有相同的值。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">&nbsp; &nbsp;&lt;map&gt; 类型用于注入一组键值对，键和值都可以为任意类型。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">&nbsp; &nbsp;&lt;props&gt;类型用于注入一组键值对，键和值都只能为String类型。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;\">3、谈谈对AOP理解?</span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">aop面向切面编程，关键在于代理模式，Spring AOP使用的动态代理，所谓的动态代理就是说AOP框架不会去修改字节码，而是每次运行时在内存中临时为方法生成一个AOP对象，这个AOP对象包含了目标对象的全部方法，并且在特定的切点做了增强处理，并回调原对象的方法。动态代理可以减少系统中的重复代码，降低了模块间的耦合度，同时提高了系统的可维护性。可用于权限认证、日志、事务处理。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">Spring AOP中的动态代理主要有两种方式，<span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; color: rgb(243, 59, 69);\">JDK动态代理和CGLIB动态代理：</span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; color: rgb(243, 59, 69);\">JDK代理：</span><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\">基于接口的代理，不支持类的代理。核心InvocationHandler接口和Proxy类，InvocationHandler&nbsp;通过invoke()方法反射来调用目标类中的代码，动态地将横切逻辑和业务编织在一起；接着，Proxy利用 InvocationHandler动态创建一个符合某一接口的的实例,&nbsp;&nbsp;生成目标类的代理对象。</span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">Proxy.newProxyInstance(ClassLoader,Interfaces,InvocationHandler);<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/><br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; color: rgb(243, 59, 69);\">CGLIB动态代理：</span>如果代理类没有实现 InvocationHandler 接口（或者说是基于父子类的），那么Spring AOP会选择使用CGLIB来动态代理目标类。CGLIB（Code Generation Library），是一个代码生成的类库，可以在运行时动态的生成指定类的一个子类对象，并覆盖其中特定方法并添加增强代码，从而实现AOP。CGLIB是通过继承的方式做的动态代理，因此如果某个类被标记为final，那么它是无法使用CGLIB做动态代理的</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; margin-left: 0pt; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; color: rgb(79, 79, 79);\">Enhancer是一个非常重要的类，它允许为非接口类型创建一个JAVA代理，Enhancer动态的创建给定类的子类并且拦截代理类的所有的方法，和JDK动态代理不一样的是不管是接口还是类它都能正常工作</span></span></p><p><br style=\"text-align: left;\"/></p><p><br style=\"text-align: left;\"/></p><p style=\"text-align:center\"><img src=\"http://127.0.0.1:8080/static/upload/images/article/content/20200729/1595998077328053663.png\" title=\"1595998077328053663.png\" alt=\"1595998077328053663.png\" width=\"1011\" height=\"276\" border=\"0\" vspace=\"0\" style=\"width: 1011px; height: 276px;\"/></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">sping的动态代理通过代理类为目标对象增加额外功能。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">代理本质 = 目标对象+额外功能+代理对象的接口</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">开发步骤：</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">1，创建原始对象</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">2，提供额外功能（实现下面的接口）</p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p style=\"text-align: left;\">MethodBeforeAdvice&nbsp; &nbsp;额外功能需要运行在原始方法之前执行.</p></li><li><p style=\"text-align: left;\">AfterReturningAdvice&nbsp; &nbsp;额外功能需要运行在原始方法之后执行</p></li><li><p style=\"text-align: left;\">MethodInterceptor&nbsp; 额外功能需要运行在原始方法之前 后执行</p></li><li><p style=\"text-align: left;\">ThrowsAdvice&nbsp; 额外功能运行在原始方法抛出异常的执行</p></li></ul><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">3，配置切入点</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">&nbsp;&lt;aop:pointcut id=&quot;pc&quot; &nbsp;expression=&quot;execution(* *(..))&quot;/&gt;</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">4，组装切入点和代理功能</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; margin-left: 0pt; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">&lt;aop:advisor pointcut-ref=&quot;pc&quot; advice-ref=&quot;代理功能的bean&quot;/&gt;</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; margin-left: 0pt; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;\">4、spring事务的实现及其原理</span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; margin-left: 0pt; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">Spring事务的本质其实就是数据库对事务的支持，没有数据库的事务支持，spring是无法提供事务功能的。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; color: rgb(243, 59, 69);\">（<span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;\"><em style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\">1）Spring事务的种类：</em></span></span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">spring支持编程式事务管理和声明式事务管理两种方式：</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">①编程式事务管理使用TransactionTemplate。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">②声明式事务管理建立在AOP之上的。其本质是通过AOP功能，对方法前后进行拦截，将事务处理的功能编织到拦截的方法中，也就是在目标方法开始之前加入一个事务，在执行完目标方法之后根据执行情况提交或者回滚事务。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">声明式事务最大的优点就是不需要在业务逻辑代码中掺杂事务管理的代码，只需在配置文件中做相关的事务规则声明或通过@Transactional注解的方式，便可以将事务规则应用到业务逻辑中。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">声明式事务管理要优于编程式事务管理，这正是spring倡导的非侵入式的开发方式，使业务代码不受污染，只要加上注解就可以获得完全的事务支持。唯一不足地方是，最细粒度只能作用到方法级别，无法做到像编程式事务那样可以作用到代码块级别。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; color: rgb(243, 59, 69);\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;\"><em style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\">（2）spring的事务传播行为：</em></span></span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">spring事务的传播行为说的是，当多个事务同时存在的时候，spring如何处理这些事务的行为。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">①<span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; color: rgb(255, 187, 102);\">&nbsp;PROPAGATION_REQUIRED：</span>如果当前没有事务，就创建一个新事务，如果当前存在事务，就加入该事务，该设置是最常用的设置。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">②&nbsp;<span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; color: rgb(255, 187, 102);\">PROPAGATION_SUPPORTS</span>：支持当前事务，如果当前存在事务，就加入该事务，如果当前不存在事务，就以非事务执行。‘</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">③ PROPAGATION_MANDATORY：支持当前事务，如果当前存在事务，就加入该事务，如果当前不存在事务，就抛出异常。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">④ PROPAGATION_REQUIRES_NEW：创建新事务，无论当前存不存在事务，都创建新事务。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">⑤ PROPAGATION_NOT_SUPPORTED：以非事务方式执行操作，如果当前存在事务，就把当前事务挂起。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">⑥ PROPAGATION_NEVER：以非事务方式执行，如果当前存在事务，则抛出异常。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">⑦ PROPAGATION_NESTED：如果当前存在事务，则在嵌套事务内执行。如果当前没有事务，则按REQUIRED属性执行。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; color: rgb(243, 59, 69);\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;\"><em style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\">（3）Spring中的隔离级别：</em></span></span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">①&nbsp;ISOLATION_DEFAULT：这是个&nbsp;PlatfromTransactionManager&nbsp;默认的隔离级别，使用数据库默认的事务隔离级别。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">②&nbsp;ISOLATION_READ_UNCOMMITTED：读未提交，允许另外一个事务可以看到这个事务未提交的数据。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">③&nbsp;ISOLATION_READ_COMMITTED：读已提交，保证一个事务修改的数据提交后才能被另一事务读取，而且能看到该事务对已有记录的更新。解决脏读问题</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">④&nbsp;ISOLATION_REPEATABLE_READ：可重复读，保证一个事务修改的数据提交后才能被另一事务读取，但是不能看到该事务对已有记录的更新。行锁</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">⑤&nbsp;ISOLATION_SERIALIZABLE：一个事务在执行的过程中完全看不到其他事务对数据库所做的更新。表锁</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; color: rgb(243, 59, 69);\"><em style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;\">（3）只读属性(readOnly)</span></em></span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; color: rgb(255, 0, 0);\">false</span>应用在查询操作时,提高查询效率， true用于查询，false用于增删改，默认是false</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; color: rgb(243, 59, 69);\"><em style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;\">（4）超时属性(timeout) 秒 -1&nbsp;由数据库决定</span></em></span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">如果当前事务操作的数据,被别的事务锁住,那么通过超时数据指定最多等待多少秒.</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; margin-left: 0pt; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; color: rgb(243, 59, 69);\"><em style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;\">（5）异常属性(+-Exception)</span></em></span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; margin-left: 0pt; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">&nbsp; &nbsp; &nbsp; &nbsp; 默认Spring会对RuntimeException及其子类进行回滚操作<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp; &nbsp; &nbsp; &nbsp; 默认Spring会对Exception及其子类进行提交操作<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp; &nbsp; &nbsp; &nbsp; rollback-for=”异常的权限定名”&nbsp;回滚操作<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>&nbsp; &nbsp; &nbsp; &nbsp; no-rollback-for=”java.lang.RuntimeException”&nbsp;提交操作</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; margin-left: 0pt; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">简单展示</p><p style=\"text-align:center\"><img src=\"http://127.0.0.1:8080/static/upload/images/article/content/20200729/1595998090871043123.png\" title=\"1595998090871043123.png\" alt=\"20190316221857216.png\"/></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;\">5、Spring有几种配置方式？</span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">将Spring配置到应用开发中有以下三种方式：</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">基于XML的配置<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; color: rgb(243, 59, 69);\">基于注解的配置（主流）</span><br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>基于Java的配置</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;\">6、Spring 框架中都用到了哪些设计模式？</span></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p style=\"text-align: left;\">工厂模式：BeanFactory就是简单工厂模式的体现，用来创建对象的实例；</p></li><li><p style=\"text-align: left;\">单例模式：Bean默认为单例模式。</p></li><li><p style=\"text-align: left;\">代理模式：Spring的AOP功能用到了JDK的动态代理和CGLIB字节码生成技术；</p></li><li><p style=\"text-align: left;\">模板方法：用来解决代码重复的问题。比如.&nbsp;RestTemplate,&nbsp;JmsTemplate,&nbsp;JpaTemplate。</p></li><li><p style=\"text-align: left;\">观察者模式：定义对象键一种一对多的依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都会得到通知被制动更新，如Spring中listener的实现--ApplicationListener。</p></li></ul><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;\">7、Spring的自动装配：</span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">在spring中，对象无需自己查找或创建与其关联的其他对象，由容器负责把需要相互协作的对象引用赋予各个对象，使用autowire来配置自动装载模式。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">在Spring框架xml配置中共有5种自动装配：</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">（1）no：默认的方式是不进行自动装配的，通过手工设置ref属性来进行装配bean。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">（2）byName：通过bean的名称进行自动装配，如果一个bean的 property 与另一bean 的name 相同，就进行自动装配。&nbsp;</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">（3）byType：通过参数的数据类型进行自动装配。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">（4）constructor：利用构造函数进行装配，并且构造函数的参数通过byType进行装配。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">（5）autodetect：自动探测，如果有构造方法，通过 construct的方式自动装配，否则使用 byType的方式自动装配。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">基于注解的方式：</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">使用@Autowired注解来自动装配指定的bean。在使用@Autowired注解之前需要在Spring配置文件进行配置，&lt;context:annotation-config /&gt;。在启动spring IoC时，容器自动装载了一个AutowiredAnnotationBeanPostProcessor后置处理器，当容器扫描到@Autowied、@Resource或@Inject时，就会在IoC容器自动查找需要的bean，并装配给该对象的属性。在使用@Autowired时，首先在容器中查询对应类型的bean：</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">如果查询结果刚好为一个，就将该bean装配给@Autowired指定的数据；</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">如果查询的结果不止一个，那么@Autowired会根据名称来查找；</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">如果上述查找的结果为空，那么会抛出异常。解决方法时，使用required=false。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">@Autowired可用于：构造函数、成员变量、Setter方法</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">注：@Autowired和@Resource之间的区别</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">(1) @Autowired默认是按照类型装配注入的，默认情况下它要求依赖对象必须存在（可以设置它required属性为false）。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">(2) @Resource默认是按照名称来装配注入的，只有当找不到与名称匹配的bean才会按照类型来装配注入。<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;\">8、Spring如何处理线程并发问题？</span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">在一般情况下，只有无状态的Bean才可以在多线程环境下共享，在Spring中，绝大部分Bean都可以声明为singleton作用域，因为Spring对一些Bean中非线程安全状态<span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; color: rgb(243, 59, 69);\">采用ThreadLocal进行处理，解决线程安全问题。</span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">ThreadLocal和线程同步机制都是为了解决多线程中相同变量的访问冲突问题。同步机制采用了“时间换空间”的方式，仅提供一份变量，不同的线程在访问前需要获取锁，没获得锁的线程则需要排队。而ThreadLocal采用了“空间换时间”的方式。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">ThreadLocal会为每一个线程提供一个独立的变量副本，从而隔离了多个线程对数据的访问冲突。因为每一个线程都拥有自己的变量副本，从而也就没有必要对该变量进行同步了。ThreadLocal提供了线程安全的共享对象，在编写多线程代码时，可以把不安全的变量封装进ThreadLocal。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;\">9、解释Spring支持的几种bean的作用域。</span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">Spring容器中的bean可以分为5个范围：</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">（1）singleton：默认，每个容器中只有一个bean的实例，单例的模式由BeanFactory自身来维护。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">（2）prototype：为每一个bean请求提供一个实例。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">（3）request：为每一个网络请求创建一个实例，在请求完成以后，bean会失效并被垃圾回收器回收。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">（4）session：与request范围类似，确保每个session中有一个bean的实例，在session过期后，bean会随之失效。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">（5）global-session：全局作用域，global-session和Portlet应用相关。当你的应用部署在Portlet容器中工作时，它包含很多portlet。如果你想要声明让所有的portlet共用全局的存储变量的话，那么这全局变量需要存储在global-session中。全局作用域与Servlet中的session作用域效果相同。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;\">10、怎样开启注解装配？</span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">注解装配在默认情况下是不开启的，为了使用注解装配，我们必须在Spring配置文件中配置&nbsp;&lt;context:annotation-config/&gt;元素。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;\">11、spring核心类有哪些？各有什么作用？&nbsp;</span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; color: rgb(0, 0, 0);\">&nbsp; BeanFactory：产生一个新的实例，可以实现单例模式</span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; margin-left: 10px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; color: rgb(0, 0, 0);\">BeanWrapper：提供统一的get及set方法</span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; margin-left: 10px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; color: rgb(0, 0, 0);\">ApplicationContext:提供框架的实现，包括BeanFactory的所有功能</span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; margin-left: 10px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; color: rgb(0, 0, 0);\">12、</span>Spring框架中的单例bean是线程安全的吗?</span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">&nbsp; &nbsp; 不，Spring框架中的单例bean不是线程安全的。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; margin-left: 0pt; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255);\"><br style=\"text-align: left;\"/></p>', 'http://localhost:8080/static/upload/images/article/cover/4c521ad955244565af42f91fdccab76c.jpg', '2020-07-28 13:39:23', '2020-07-29 04:48:16', '1', '13');
INSERT INTO `article` VALUES ('16', 'Mybatis中的 ${} 和 #{}区别与用法', 'Mybatis中的 ${} 和 #{}区别与用法Mybati', '<h1 id=\"articleContentId\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 28px; overflow-wrap: break-word; color: rgb(34, 34, 38); word-break: break-all; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">Mybatis中的 ${} 和 #{}区别与用法</h1><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; font-size: 18px;\">Mybatis 的Mapper.xml语句中<span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; color: rgb(47, 47, 47);\">parameterType向SQL语句传参有两种方式：#{}和${}</span></span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; font-size: 18px; color: rgb(47, 47, 47);\">我们经常使用的是#{},一般解说是因为这种方式可以防止SQL注入，简单的说#{}这种方式SQL语句是经过预编译的，它是把#{}中间的参数转义成字符串，举个例子：</span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; font-size: 18px; color: rgb(47, 47, 47);\">select * from student where student_name = #{name}&nbsp;</span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; font-size: 18px; color: rgb(47, 47, 47);\">预编译后,会动态<span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; overflow-wrap: break-word; color: rgb(51, 51, 51);\">解析成一个参数标记符?</span>：</span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; font-size: 18px; color: rgb(47, 47, 47);\">select * from student where student_name = ?</span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; font-size: 18px;\">而使用${}在<span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; overflow-wrap: break-word; color: rgb(51, 51, 51);\">动态解析时候，会传入参数字符串</span></span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; overflow-wrap: break-word; color: rgb(51, 51, 51);\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; overflow-wrap: break-word; font-size: 18px;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; color: rgb(47, 47, 47);\">select * from student where student_name = &#39;lyrics&#39;</span><br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/></span></span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; font-size: 18px;\"><br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/></span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; font-size: 18px;\">总结：</span></p><ol style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><ol class=\" list-paddingleft-2\"><li><p style=\"text-align: left;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; font-size: 18px;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; color: rgb(160, 161, 167); font-style: italic; overflow-wrap: break-word; font-size: 14px;\">#{} 这种取值是编译好SQL语句再取值</span></span></p></li></ol><li><p style=\"text-align: left;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; color: rgb(152, 104, 1); overflow-wrap: break-word;\">${}</span> 这种是取值以后再去编译SQL语句</p></li></ol><p style=\"text-align: left;\"><br style=\"text-align: left;\"/></p><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p style=\"text-align: left;\">#{}方式能够很大程度防止sql注入。</p></li><li><p style=\"text-align: left;\">$方式无法防止Sql注入。</p></li><li><p style=\"text-align: left;\">$方式一般用于传入数据库对象，例如传入表名.</p></li><li><p style=\"text-align: left;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\">一般能用#的就别用$.</span></p></li></ul><p style=\"text-align: left;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; overflow-wrap: break-word;\">举个activiti工作流的例子：</span></p><p style=\"text-align: left;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; overflow-wrap: break-word;\">select * from&nbsp;</span><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; overflow-wrap: break-word; color: rgb(255, 0, 0);\">${prefix}</span><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; overflow-wrap: break-word;\">ACT_HI_PROCINST where PROC_INST_ID_ =&nbsp;</span><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: Verdana, Arial, Helvetica, sans-serif; overflow-wrap: break-word;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; overflow-wrap: break-word; color: rgb(255, 0, 0);\">#{processInstanceId}</span></span></p><p><br style=\"text-align: left;\"/></p>', 'http://localhost:8080/static/upload/images/article/cover/da3bded71ce94ebf83753f196e863708.jpg', '2020-07-28 13:44:29', '2020-07-28 13:44:29', '1', '14');
INSERT INTO `article` VALUES ('17', 'Shiro', 'ShiroShiro简介Apache Shiro是Java的', '<h1 class=\"title-article\" id=\"articleContentId\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 28px; overflow-wrap: break-word; color: rgb(34, 34, 38); word-break: break-all; white-space: normal; background-color: rgb(255, 255, 255);\">Shiro</h1><h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 28px; color: rgb(79, 79, 79); line-height: 36px; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255);\">Shiro简介</h1><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255);\">Apache Shiro是Java的一个安全框架。目前，使用Apache Shiro的人越来越多，因为它相当简单，对比Spring Security，可能没有Spring Security做的功能强大，但是在实际工作时可能并不需要那么复杂的东西，所以使用小而简单的Shiro就足够了。对于它俩到底哪个好，这个不必纠结，能更简单的解决项目问题就好了。</p><p><br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; color: rgb(51, 51, 51); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif, SimHei, SimSun; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);\"/></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 28px; color: rgb(79, 79, 79); line-height: 36px; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255);\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t1\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t1\"></a>Shiro架构与功能介绍</h1><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;\">1.认证与授权相关基本概念</span><br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\"/></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255);\">两个基本的概念</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255);\">安全实体：系统需要保护的具体对象数据</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255);\">权限：系统相关的功能操作，例如基本的CRUD</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255);\"><br/></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;\">Authentication：</span>身份认证/登录，验证用户是不是拥有相应的身份；</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;\">Authorization：</span>授权，即权限验证，验证某个已认证的用户是否拥有某个权限；即判断用户是否能做事情，常见的如：验证某个用户是否拥有某个角色。或者细粒度的验证某个用户对某个资源是否具有某个权限；</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;\">Session Manager：</span>会话管理，即用户登录后就是一次会话，在没有退出之前，它的所有信息都在会话中；会话可以是普通JavaSE环境的，也可以是如Web环境的；</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;\">Cryptography：</span>加密，保护数据的安全性，如密码加密存储到数据库，而不是明文存储；</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;\">Web Support：</span>Web支持，可以非常容易的集成到Web环境；</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255);\">Caching：缓存，比如用户登录后，其用户信息、拥有的角色/权限不必每次去查，这样可以提高效率；</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;\">Concurrency：</span>shiro支持多线程应用的并发验证，即如在一个线程中开启另一个线程，能把权限自动传播过去；</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;\">Testing：</span>提供测试支持；</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;\">Run As：</span>允许一个用户假装为另一个用户（如果他们允许）的身份进行访问；</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;\">Remember Me：</span>记住我，这个是非常常见的功能，即一次登录后，下次再来的话不用登录了。</p><p><br/></p>', 'http://localhost:8080/static/upload/images/article/cover/83f52fbad8f944269784c16f5114b038.jpg', '2020-07-28 13:50:41', '2020-07-28 13:50:41', '1', '15');
INSERT INTO `article` VALUES ('18', '爬虫介绍', '爬虫百度百科网络爬虫是一种按照一定的规则，自动地抓取万维网信', '<h1 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 28px; color: rgb(79, 79, 79); line-height: 36px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">爬虫</h1><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">百度百科</p><blockquote style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 16px; color: rgba(0, 0, 0, 0.5); border-left: 8px solid rgb(221, 223, 228); background: rgb(238, 240, 244); overflow: auto; overflow-wrap: break-word; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: common-ligatures; white-space: normal; word-break: break-word !important; text-align: left;\"><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word; text-align: left;\">网络爬虫是一种按照一定的规则，自动地抓取万维网信息的程序或者脚本。</p></blockquote><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">网络爬虫（又称网络蜘蛛，机器人），就是模拟客户端发送网络请求，接收请求响应，一种按照一定的规则，自动地抓取互联网信息的程序。<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>只要浏览器能够做的事情，原则上，爬虫都能够做到。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">简单来说，爬虫就是自动从网络上收集信息的一种程序，复杂点来说，就是一整套关于数据请求、处理、存储的程序。</p><p style=\"text-align:center\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t1\"></a></p><p style=\"text-align:center\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t1\"></a></p><h2 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 24px; color: rgb(79, 79, 79); line-height: 32px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a id=\"_10\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\"></a>原理<br/></h2><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">发送请求 -&gt; 接收响应 -&gt; 解析网页 (-&gt; 提取链接 -&gt; 发送请求) -&gt; 提取资源 -&gt; 保存资源</p><p style=\"text-align:center\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t2\"></a></p><p style=\"text-align:center\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t2\"></a></p><h3 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 22px; color: rgb(79, 79, 79); line-height: 30px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a id=\"_14\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\"></a>发送请求<br/></h3><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">实质是模拟浏览器发送 http 请求报文的过程，实际中只需要请求服务器需要的部分报文。</p><h4 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 20px; color: rgb(79, 79, 79); line-height: 28px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a id=\"_18\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\"></a>请求库</h4><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">模拟浏览器的请求</p><ol style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; text-align: left;\">requests 爬虫最常用的库<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>比起之前用到的urllib，requests模块的api更加便捷（本质就是封装了urllib3）。</p></li><li><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; text-align: left;\">urllib<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>提供了一系列用于操作URL的功能。</p></li></ol><h4 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 20px; color: rgb(79, 79, 79); line-height: 28px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a id=\"_28\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\"></a>请求报文</h4><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">请求行、请求头、空行、请求体<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-SBm9ugRo-1579768800332)(./assets/request-message.jpg#pic_center)]</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a href=\"https://www.cnblogs.com/yyhh/p/5140852.html\" rel=\"nofollow\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; text-decoration-line: none; cursor: pointer; background-color: transparent; color: rgb(103, 149, 181); overflow-wrap: break-word;\">使用Fiddler抓取http请求(抓包)</a></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">一个完整的 http 请求报文</p><pre style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; overflow-wrap: break-word; background-color: rgb(40, 44, 52); border: none; font-variant-ligatures: common-ligatures;\">POST&nbsp;http://columbus.os.adc.com/api/coop/requirement/tree/query/prune/page?projectId=100001&nbsp;HTTP/1.1\r\nHost:&nbsp;columbus.os.adc.com\r\nConnection:&nbsp;keep-alive\r\nContent-Length:&nbsp;483\r\nAccept:&nbsp;application/json,&nbsp;text/plain,&nbsp;*/*\r\nOrigin:&nbsp;http://columbus.os.adc.com\r\nUser-Agent:&nbsp;Mozilla/5.0&nbsp;(Windows&nbsp;NT&nbsp;6.1;&nbsp;WOW64)&nbsp;AppleWebKit/537.36&nbsp;(KHTML,&nbsp;like&nbsp;Gecko)&nbsp;Chrome/65.0.3314.0&nbsp;Safari/537.36&nbsp;SE&nbsp;2.X&nbsp;MetaSr&nbsp;1.0\r\nContent-Type:&nbsp;application/json;charset=UTF-8;multipart/form-data\r\nReferer:&nbsp;http://columbus.os.adc.com/requirement/list?projectId=100001\r\nAccept-Encoding:&nbsp;gzip,&nbsp;deflate\r\nAccept-Language:&nbsp;zh-CN,zh;q=0.9\r\nCookie:&nbsp;SESSION=1e365567-bbed-4ff8-b033-6ab21dc05bd2;&nbsp;user=W9005349\r\n\r\n{&quot;projectId&quot;:&quot;100001&quot;,&quot;title&quot;:&quot;&quot;,&quot;assignUsers&quot;:[],&quot;isArchived&quot;:-1}</pre><h5 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 18px; color: rgb(79, 79, 79); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">请求行</h5><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">请求方法 + 空格 +请求URL + 空格 + HTTP协议版本 + 回车 换行</p><h5 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 18px; color: rgb(79, 79, 79); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a id=\"_58\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\"></a>请求头</h5><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">请求的配置信息，key-value 形式发送给服务器</p><blockquote style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 16px; color: rgba(0, 0, 0, 0.5); border-left: 8px solid rgb(221, 223, 228); background: rgb(238, 240, 244); overflow: auto; overflow-wrap: break-word; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: common-ligatures; white-space: normal; word-break: break-word !important; text-align: left;\"><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word; text-align: left;\">Accept： 浏览器可接受的MIME类型。<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>Accept-Charset：浏览器可接受的字符集。<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>Accept-Encoding：浏览器能够进行解码的数据编码方式，比如gzip。Servlet能够向支持gzip 的浏览器返回经gzip编码的HTML页面。许多情形下这可以减少5到10倍的下载时间。<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>Accept-Language：浏览器所希望的语言种类，当服务器能够提供一种以上的语言版本时要用到。<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>Content-Length：表示请求消息正文的长度。<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>Host： 客户机通过这个头告诉服务器，想访问的主机名。Host头域指定请求资源的Intenet主机和端口号，必须表示请求url的原始服务器或网关的位置。HTTP/1.1请求必须包含主机头域，否则系统会以400状态码返回。<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>If-Modified-Since：客户机通过这个头告诉服务器，资源的缓存时间。只有当所请求的内容在指定的时间后又经过修改才返回它，否则返回304“Not Modified”应答。<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>Referer：客户机通过这个头告诉服务器，它是从哪个资源来访问服务器的(防盗链)。包含一个URL，用户从该URL代表的页面出发访问当前请求的页面。<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>User-Agent：User-Agent头域的内容包含发出请求的用户信息。浏览器类型，如果Servlet返回的内容与浏览器类型有关则该值非常有用。<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>Cookie：客户机通过这个头可以向服务器带数据，这是最重要的请求头信息之一。<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>Cookie2：用来说明请求端支持的cookie版本。<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>Range：如果服务器支持范围请求，就请求资源的指定范围。</p></blockquote><h5 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 18px; color: rgb(79, 79, 79); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a id=\"_75\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\"></a>空行</h5><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">通过空行告诉服务器请求头部结束。</p><h5 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 18px; color: rgb(79, 79, 79); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a id=\"_79\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\"></a>请求体</h5><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">根据不同的请求方法包含不同的内容。<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>get: 空<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>post: 表单数据</p><p style=\"text-align:center\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t3\"></a></p><p style=\"text-align:center\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t3\"></a></p><h3 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 22px; color: rgb(79, 79, 79); line-height: 30px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a id=\"_85\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\"></a>接收响应<br/></h3><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">获取特定请求返回的响应报文，提取目标数据。</p><h4 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 20px; color: rgb(79, 79, 79); line-height: 28px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a id=\"_89\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\"></a>响应报文</h4><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">响应行、响应头、空行、响应体<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-NXRBMhIU-1579768800338)(./assets/response-message.jpg#pic_center)]</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">一个完整的 http 响应报文</p><pre style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; overflow-wrap: break-word; background-color: rgb(40, 44, 52); border: none; font-variant-ligatures: common-ligatures;\">HTTP/1.1&nbsp;200\r\nServer:&nbsp;nginx/1.12.2\r\nDate:&nbsp;Thu,&nbsp;23&nbsp;Jan&nbsp;2020&nbsp;02:03:03&nbsp;GMT\r\nContent-Type:&nbsp;application/json;charset=UTF-8\r\nTransfer-Encoding:&nbsp;chunked\r\nConnection:&nbsp;keep-alive\r\ntrace-id:&nbsp;15-32349ee9-8945-438c-91a6-33ff10c0c0ee-18882\r\nX-Content-Encoding-Over-Network:&nbsp;gzip\r\n\r\n77\r\n{&quot;status&quot;:200,&quot;msg&quot;:null,&quot;data&quot;:{&quot;result&quot;:[],&quot;pageInfo&quot;:{&quot;totalPages&quot;:0,&quot;totalRecords&quot;:0,&quot;pageNumber&quot;:1,&quot;pageSize&quot;:5}}}\r\n0123456789101112</pre><h5 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 18px; color: rgb(79, 79, 79); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a id=\"_111\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\"></a>响应行</h5><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">http协议版本 + 空格 + 状态码 + 空格 + 状态码描述 + 回车 换行</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">http状态码</p><ol style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; text-align: left;\">100~199：信息，服务器收到请求，需要请求者继续执行操作</p></li><li><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; text-align: left;\">200~299：成功，操作被成功接收并处理</p></li><li><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; text-align: left;\">300~399：重定向，需要进一步的操作以完成请求</p></li><li><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; text-align: left;\">400~499：客户端错误，请求包含语法错误或无法完成请求</p></li><li><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; text-align: left;\">500~599：服务器错误，服务器在处理请求的过程中发生错误</p></li></ol><h5 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 18px; color: rgb(79, 79, 79); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a id=\"_127\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\"></a>响应头</h5><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">描述服务器和数据的基本信息。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">Set-Cookie：设置浏览器 Cookie，以后当浏览器访问符合条件的 URL 时，会自动带上该 Cooike<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>Refresh：告诉浏览器隔多久刷新一次，以秒计</p><h5 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 18px; color: rgb(79, 79, 79); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a id=\"_134\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\"></a>空行</h5><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">响应头结束</p><h5 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 18px; color: rgb(79, 79, 79); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a id=\"_138\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\"></a>响应体</h5><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">网站返回的数据</p><p style=\"text-align:center\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t4\"></a></p><p style=\"text-align:center\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t4\"></a></p><h3 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 22px; color: rgb(79, 79, 79); line-height: 30px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a id=\"_142\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\"></a>解析网页<br/></h3><ol style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; text-align: left;\">提取网页链接</p></li><li><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; text-align: left;\">提取网页资源</p></li></ol><h4 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 20px; color: rgb(79, 79, 79); line-height: 28px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a id=\"_148\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\"></a>解析库</h4><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">源码中找到并提取数据</p><ol style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; text-align: left;\">Beautiful Soup<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>Beautiful Soup 是 python 的一个库，其最主要的功能是从网页中抓取数据。</p></li><li><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; text-align: left;\">pyquery<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>据说比beautiful 好用，语法和jquery非常像。</p></li></ol><p style=\"text-align:center\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t5\"></a></p><p style=\"text-align:center\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t5\"></a></p><h2 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 24px; color: rgb(79, 79, 79); line-height: 32px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a id=\"_158\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\"></a>爬虫开源框架<br/></h2><ol style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; text-align: left;\">scrapy：是Python开发的一个快速、高层次的屏幕抓取和web抓取框架，用于抓取web站点并从页面中提取结构化的数据。Scrapy用途广泛，可以用于数据挖掘、监测和自动化测试。</p></li><li><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; text-align: left;\">nutch： 是一个开源Java实现的搜索引擎。它提供了我们运行自己的搜索引擎所需的全部工具。包括全文搜索和Web爬虫。</p></li></ol><p style=\"text-align:center\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t6\"></a></p><p style=\"text-align:center\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t6\"></a></p><h2 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 24px; color: rgb(79, 79, 79); line-height: 32px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a id=\"_164\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\"></a>商业场景<br/></h2><ol style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; text-align: left;\">搜索引擎<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>百度、谷歌搜索就是一个巨大的爬虫程序。</p></li><li><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; text-align: left;\">爬取新闻 新闻门户网站的新闻共享<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>比如说今日头条、一点新闻、腾讯新闻等等。他们的新闻来源，一个当然是从自己的记者这里产生，另一部分呢，就是从其他网站上，爬下来他们的记者写的文章。这样才能够做到新闻的门户级别。一个网站报道了一个新闻，其他的网站马上会给你推送相同的新闻了。这中间就是爬虫在起作用，如果是人去找新闻，不仅速度慢，还可能会重复，而且不能24小时工作。这当然就很不方便了。</p></li><li><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; text-align: left;\">为机器学习，大数据做准备<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; text-align: left;\"/>机器学习基于海量的数据样本，比如人脸识别，图像识别，语音识别，只有对大量的样本数据进行分析，才能提升程序的识别准确度。至于大数据分析更是基于海量数据，所以爬虫就是获取数据的一种途径。</p></li></ol><p style=\"text-align:center\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t7\"></a></p><p style=\"text-align:center\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t7\"></a></p><h2 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 24px; color: rgb(79, 79, 79); line-height: 32px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a id=\"_175\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\"></a>个人用途<br/></h2><ol style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; text-align: left;\">分析喜欢妹子的朋友圈hh</p></li><li><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; text-align: left;\">找工作时爬取招聘网站某工种的所有招聘信息</p></li></ol><p><br style=\"text-align: left;\"/></p>', 'http://localhost:8080/static/upload/images/article/cover/23e8e19156a24f8398ba29e408bbc618.jpg', '2020-07-28 13:53:24', '2020-07-28 13:53:24', '1', '16');
INSERT INTO `article` VALUES ('19', 'WEB简介', 'WEB简介WEB一、Web简介1、 简介早期的web应用主要', '<h1 class=\"title-article\" id=\"articleContentId\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 28px; overflow-wrap: break-word; color: rgb(34, 34, 38); word-break: break-all; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255);\">WEB简介</h1><h1 id=\"web\" style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 28px; color: rgb(79, 79, 79); line-height: 36px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255);\">WEB</h1><h2 id=\"一web简介\" style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 24px; color: rgb(79, 79, 79); line-height: 32px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255);\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t1\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t1\"></a>一、Web简介</h2><h3 id=\"1-简介\" style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 22px; color: rgb(79, 79, 79); line-height: 30px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255);\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t2\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t2\"></a>1、 简介</h3><ol style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p>早期的web应用主要是静态页面的浏览，这些静态页面使用HTML语言编写，放在服务器上，用户使用浏览器通过HTTP协议请求服务器上的web页面，服务器上的web服务器软件接受到用户发送的请求后，读取请求URI所标识的资源，加上消息包头发送给客户端的浏览器，浏览器解析响应中的HTML数据，向用户呈现多姿多彩的HTML页面。</p></li><li><p>但是随着网络的发展，很多线下业务开始向网上发展，基于Internet的web应用也变得越来越复杂用户所访问的资源已不仅仅局限于服务器硬盘上存放的静态网页，更多的应用需要根据用户的请求动态生成网页信息，复杂的还需要从数据库中提取信息，经过一定的运算，生成一个页面返回给客户</p></li><li><p>如何才能实现? 利用已经实现HTTP协议的服务器端软件，这些软件预先给我们留出了扩展的接口，我们只需要按照一定的规则提供相应的扩展功能，当这类web服务器接受到客户端请求后，判断请求是否是访问我们提供的扩展功能，如果是，将请求交由我们编写的程序去处理，处理完成后，程序将处理结果交回web服务器软件，web服务器软件拿到结果后，再将结果作为相应信息返回给客户端。</p></li><li><p>早起使用的web服务器扩展机制是CGI，它允许用户调用web服务器上的CGI程序，CGI全称 Common Gateway Interface 公共网关接口，大多数的CGI程序使用Perl来编写，也有通过C,Python或PHP编写，用户通过单击某个连接或者直接在浏览器的地址栏输入URL来访问CGI程序，web服务器接受到请求后，发现这个请求是给CGI程序的，于是就启动并运行这个CGI程序，对用于请求进行处理。CGI程序解析请求中的CGI数据，处理数据，并且产生一个响应，这个响应被返回给web服务器，web服务器包装这个响应，以HTTP响应的形式发送给Web浏览器。但是CGI编写困难，对用户请求的响应时间较长以进程方式运行导致性能受限制。</p></li></ol><h3 id=\"2web应用历史\" style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 22px; color: rgb(79, 79, 79); line-height: 30px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255);\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t3\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t3\"></a>2、Web应用历史</h3><h4 id=\"21单机程序\" style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 20px; color: rgb(79, 79, 79); line-height: 28px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255);\">2.1、单机程序</h4><blockquote style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 16px; color: rgba(0, 0, 0, 0.5); border-left: 8px solid rgb(221, 223, 228); background: rgb(238, 240, 244); overflow: auto; overflow-wrap: break-word; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: common-ligatures; white-space: normal; word-break: break-word !important;\"><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word;\">软件从附着于电脑硬件之日起，就在不断的进行着自我完善和演变。从其使用模式的角度出发，可以简单分为单机程序和网络程序。发展到今时今日仍有大量的不依赖网络的单机程序被我们使用，如记事本、Excel、PPT、ZIP压缩等软件都是大家熟知的装机必备软件</p></blockquote><h4 id=\"22网络程序\" style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 20px; color: rgb(79, 79, 79); line-height: 28px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255);\">2.2、网络程序</h4><blockquote style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 16px; color: rgba(0, 0, 0, 0.5); border-left: 8px solid rgb(221, 223, 228); background: rgb(238, 240, 244); overflow: auto; overflow-wrap: break-word; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: common-ligatures; white-space: normal; word-break: break-word !important;\"><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word;\">当电脑越来越多的参与到日常生产生活中，单机程序已经不能满足企业的需要。企业级应用要求能够最大程度的让更多的客户端参与到协同办公之中，所以依赖于网络的程序开始大力发展起来。</p></blockquote><h4 id=\"23主机终端模式\" style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 20px; color: rgb(79, 79, 79); line-height: 28px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255);\">2.3、主机+终端模式</h4><blockquote style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 16px; color: rgba(0, 0, 0, 0.5); border-left: 8px solid rgb(221, 223, 228); background: rgb(238, 240, 244); overflow: auto; overflow-wrap: break-word; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: common-ligatures; white-space: normal; word-break: break-word !important;\"><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word;\">最早的网络程序是基于主机+终端模式的，也就是整个应用中只有一台大型主机，各个操作地点都是使用一条专线与主机相连，终端不提供任何运算和界面，类似于Unix形式，所有的运算和处理都由主机来完成。主机一般处理能力非常强大，并且稳定，主要机型都是由IBM这样的大公司提供。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word;\"><img src=\"http://opof44evx.bkt.clouddn.com/17-5-9/83457195-file_1494318720996_f497.jpg\" alt=\"img\" title=\"\" style=\"box-sizing: border-box; outline: none; margin: 24px 0px; padding: 0px; border: 0px none; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\"/></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;\">图-1 主机-终端模式</span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word;\">但上述模式中，主机的高昂的价格以及扩展难、维护费用高等弊端并不是一般企业所能承受，所以除银行、航空订票、证券等大企业在使用以外，大多数企业开始转投CS架构的程序，即客户端服务器架构。</p></blockquote><h4 id=\"24cs架构\" style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 20px; color: rgb(79, 79, 79); line-height: 28px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255);\">2.4、C/S架构</h4><h5 id=\"1说明\" style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 18px; color: rgb(79, 79, 79); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255);\">1、说明</h5><blockquote style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 16px; color: rgba(0, 0, 0, 0.5); border-left: 8px solid rgb(221, 223, 228); background: rgb(238, 240, 244); overflow: auto; overflow-wrap: break-word; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: common-ligatures; white-space: normal; word-break: break-word !important;\"><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word;\">CS架构的发展过程经历了两层CS架构，三层CS架构以及多层CS架构的演变。<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\"/>两层的CS架构是由客户端和后面的数据库组成的。数据库用于存放数据，并且使用数据库编程语言编写业务逻辑，客户端则使用VB、VC、Delphi这样的可视化编程方便的语言来开发客户端的输入输出界面。用户通过界面向服务器发送请求，服务器发回的数据则通过界面进行显示，服务器的角色就由数据库来充当。这样做的好处就是开发效率高，满足企业需求。但是这种架构存在着很大的弊端，第一是可移植性差，如当数据库从SQL Server更换为Oracle时就必须将业务逻辑用新的语言再重新编写一遍；第二则是大型系统做不了，因为客户端与数据库需要建立持续的连接，而数据库能够支持的最大连接数是有限制的。所以在2000年这样的架构流行之后，慢慢的就开始向三层CS架构转变。<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\"/>三层的CS架构指的是客户端+应用服务器+数据库，即将混合在数据库端的业务逻辑从中分离出来，放入到应用服务器中，数据库只负责数据的管理、存储及检索。客户端负责界面。三层之中的应用服务器其实也是程序，类似于前面讲过的TCP、Socket编程，任何支持TCP编程的语言都可以作为应用服务器。三层CS架构的工作流程。<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\"/><img src=\"http://opof44evx.bkt.clouddn.com/17-5-9/2217302-file_1494318727491_25d7.jpg\" alt=\"img\" title=\"\" style=\"box-sizing: border-box; outline: none; margin: 24px 0px; padding: 0px; border: 0px none; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\"/></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;\">C / S 三层架构图</span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word;\">用户通过GUI（图形用户界面）进行操作，然后调用客户端的通信模块，通信模块依据自定义协议将请求数据打包，通过网络发送该请求，到达应用服务器时，应用服务器同样也有一个通信模块，将收到的数据包按照协议进行拆包，调用相应的业务处理模块，处理数据，其中可能需要访问数据库来完成数据的获取，将处理完的结果再次发送给通信模块，通信模块将结果按照自定义协议进行打包，然后将数据包发送给客户端的通信模块，客户端进行拆包获取响应数据，将结果显示在界面上，更新界面上的数据显示。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word;\">这样的程序结构虽然在一定程度上降低了对数据库编程的依赖，并且能够适应大型的应用程序，但数据通信模块的增加却提升了开发的难度以及整体架构的复杂度。</p></blockquote><h5 id=\"2优缺\" style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 18px; color: rgb(79, 79, 79); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255);\">2、优缺</h5><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;\">优点</span></p><ol style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p>能充分发挥客户端PC的处理能力，很多工作可以在客户端处理后再提交给服务器，所以CS客户端响应速度快。</p></li><li><p>操作界面漂亮、形式多样，可以充分满足客户自身的个性化要求。</p></li><li><p>C/S结构的管理信息系统具有较强的事务处理能力，能实现复杂的业务流程。</p></li><li><p>安全性能可以很容易保证，C/S一般面向相对固定的用户群，程序更加注重流程，它可以对权限进行多层次校验，提供了更安全的存取模式，对信息安全的控制能力很强。一般高度机密的信息系统采用C/S结构适宜。</p></li></ol><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;\">缺点</span></p><ol style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p>需要专门的客户端安装程序，分布功能弱，针对点多面广且不具备网络条件的用户群体，不能够实现快速部署安装和配置。</p></li><li><p>兼容性差，对于不同的开发工具，具有较大的局限性。若采用不同工具，需要重新改写程序。开发、维护成本较高，需要具有一定专业水准的技术人员才能完成，发生一次升级，则所有客户端的程序都需要改变。。<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\"/></p></li><ol style=\"list-style-type: none;\" class=\"custom_num list-paddingleft-1\"><li class=\"list-num-1-1 list-num-paddingleft-1\"><p>用户群固定。由于程序需要安装才可使用，因此不适合面向一些不可知的用户，所以适用面窄，通常用于局域网中</p></li></ol></ol><h4 id=\"25bs架构\" style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 20px; color: rgb(79, 79, 79); line-height: 28px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255);\">2.5、B/S架构</h4><h5 id=\"1说明-1\" style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 18px; color: rgb(79, 79, 79); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255);\">1、说明</h5><blockquote style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 16px; color: rgba(0, 0, 0, 0.5); border-left: 8px solid rgb(221, 223, 228); background: rgb(238, 240, 244); overflow: auto; overflow-wrap: break-word; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: common-ligatures; white-space: normal; word-break: break-word !important;\"><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word;\">为了降低三层CS架构中与通信有关的复杂度，BS架构开始成为了网络程序中一大重要的架构类型。<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\"/>BS架构即Browser + Web Server + DB<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\"/><img src=\"http://opof44evx.bkt.clouddn.com/17-5-9/5701839-file_1494318731368_169c6.jpg\" alt=\"img\" title=\"\" style=\"box-sizing: border-box; outline: none; margin: 24px 0px; padding: 0px; border: 0px none; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\"/></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;\">图-3 B/S三层架构图</span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word;\">由于三层CS架构中，自定义协议提升了整体的复杂度，那么就将自定义协议变成标准的HTTP协议。于是客户端使用HTTP协议进行数据打包拆包的程序即各厂商依据标准开发的浏览器，Web服务器也是基于HTTP协议由一些厂商提供，如IIS，Apache等。这样基于浏览器和服务器的架构中，由于协议已被限定，所以与通信有关的数据打包拆包的过程都不用我们开发人员来编写程序，只需要考虑将HTTP协议解析出来的数据进行业务处理，以及将什么样的结果提供给响应即可。也就是开发过程中只需要考虑7,8,9这三个步骤即可。于是大大降低了网络程序的开发难度，所以这种架构得到了大量的应用。</p></blockquote><h5 id=\"2优缺点\" style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 18px; color: rgb(79, 79, 79); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255);\">2、优缺点</h5><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;\">优点</span></p><ol style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p>分布性强，客户端零维护。只要有网络、浏览器，可以随时随地进行查询、浏览等业务处理。</p></li><li><p>业务扩展简单方便，通过增加网页即可增加服务器功能。</p></li><li><p>维护简单方便，只需要改变网页，即可实现所有用户的同步更新。</p></li><li><p>开发简单，共享性强。</p></li></ol><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255);\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;\">缺点</span></p><ol style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p>个性化特点明显降低，无法实现具有个性化的功能要求。</p></li><li><p>在跨浏览器上，BS架构不尽如人意。</p></li><li><p>客户端服务器端的交互是请求-响应模式，通常动态刷新页面，响应速度明显降低（Ajax可以一定程度上解决这个问题）。无法实现分页显示，给数据库访问造成较大的压力。</p></li><li><p>在速度和安全性上需要花费巨大的设计成本。</p></li><li><p>功能弱化，难以实现传统模式下的特殊功能要求。</p></li></ol><h2 id=\"二什么web应用程序\" style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 24px; color: rgb(79, 79, 79); line-height: 32px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255);\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t4\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t4\"></a>二、什么WEB应用程序</h2><ol style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p>WEB应用程序指供浏览器访问的程序，通常也简称为web应用。例如有x.html 、x.html…..多个web资源，这多个web资源用于对外提供服务，此时应把这多个web资源放在一个目录中，以组成一个web应用程序</p></li><li><p>一个web应用由多个静态web资源和动态web资源组成，如:html、css、js文件，Jsp文件、java程序、支持jar包、配置文件等等。</p></li><li><p>Web应用开发好后，若想供外界访问，需要把web应用所在目录交给web服务器管理</p></li></ol><h2 id=\"三web应用程序的开发\" style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 24px; color: rgb(79, 79, 79); line-height: 32px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255);\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t5\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t5\"></a>三、WEB应用程序的开发</h2><h3 id=\"1概要\" style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 22px; color: rgb(79, 79, 79); line-height: 30px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255);\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t6\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t6\"></a>1、概要</h3><blockquote style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 16px; color: rgba(0, 0, 0, 0.5); border-left: 8px solid rgb(221, 223, 228); background: rgb(238, 240, 244); overflow: auto; overflow-wrap: break-word; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: common-ligatures; white-space: normal; word-break: break-word !important;\"><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word;\">Web应用程序指供浏览器访问的程序，通常也简称为web应用</p></blockquote><h3 id=\"2静态web\" style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 22px; color: rgb(79, 79, 79); line-height: 30px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255);\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t7\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t7\"></a>2、静态web</h3><ol style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;\">定义</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;\">指web页面中供人们浏览的数据始终是不变,例如 .htm、.html，这些是网页的后缀，用户直接访问这些文件就能看到内容</p></li><li><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;\">流程示例图</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;\"><img src=\"http://opzv089nq.bkt.clouddn.com/17-8-26/76985718.jpg\" alt=\"img\" title=\"\" style=\"box-sizing: border-box; outline: none; margin: 24px 0px; padding: 0px; border: 0px none; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\"/></p></li><li><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;\">缺点</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;\">1、Web页面中的内容无法动态更新，所有的用户每时每刻看见的内容和最终效果都是一样的。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;\">2、静态WEB无法连接数据库，无法实现和用户的交互</p></li><li><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;\">静态WEB想达到动态效果需要用到的技术</p><blockquote style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 16px; color: rgba(0, 0, 0, 0.5); border-left: 8px solid rgb(221, 223, 228); background: rgb(238, 240, 244); overflow: auto; overflow-wrap: break-word; word-break: break-word !important;\"><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 14px; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word;\">JavaScript(常用)</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 14px; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word;\">JScript</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 14px; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word;\">ScriptEase</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 14px; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word;\">VBScript</p></blockquote></li></ol><h3 id=\"3动态web\" style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 22px; color: rgb(79, 79, 79); line-height: 30px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255);\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t8\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t8\"></a>3、动态web</h3><ol style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;\">定义</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;\">指web页面中浏览的数据是由程序产生的，不同时间点,不同地点,不同人访问同一个web页面看到的内容和界面可能不一样,而且动态WEB具有交互性，WEB的页面的内容可以动态更新</p></li><li><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;\">流程示意图(java为例)</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;\"><img src=\"http://opzv089nq.bkt.clouddn.com/17-8-26/35084213.jpg\" alt=\"img\" title=\"\" style=\"box-sizing: border-box; outline: none; margin: 24px 0px; padding: 0px; border: 0px none; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\"/></p><blockquote style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 16px; color: rgba(0, 0, 0, 0.5); border-left: 8px solid rgb(221, 223, 228); background: rgb(238, 240, 244); overflow: auto; overflow-wrap: break-word; word-break: break-word !important;\"><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 14px; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word;\">动态WEB中，程序依然使用客户端和服务端，客户端依然使用浏览器（IE、FireFox等），通过网络(Network)连接到服务器上，使用HTTP协议发起请求（Request），现在的所有请求都先经过一个WEB Server Plugin（服务器插件）来处理，此插件用于区分是请求的是静态资源(<em style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\">.htm或者是</em>.htm)还是动态资源。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 14px; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word;\">如果WEB Server Plugin发现客户端请求的是静态资源(<em style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\">.htm或者是</em>.html)，则将请求直接转交给WEB服务器，之后WEB服务器从文件系统中取出内容，发送回客户端浏览器进行解析执行。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 14px; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word;\">如果WEB Server Plugin发现客户端请求的是动态资源（<em style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\">.jsp、</em>.asp/<em style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\">.aspx、</em>.php），则先将请求转交给WEB Container(WEB容器)，在WEB Container中连接数据库，从数据库中取出数据等一系列操作后动态拼凑页面的展示内容，拼凑页面的展示内容后，把所有的展示内容交给WEB服务器，之后通过WEB服务器将内容发送回客户端浏览器进行解析执行</p></blockquote></li><li><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;\">动态web技术</p></li><ul style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p>ASP</p></li><li><p>PHP</p></li><li><p>JSP</p></li></ul></ol><h2 id=\"三什么是web-服务器\" style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 24px; color: rgb(79, 79, 79); line-height: 32px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255);\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t9\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t9\"></a>三、什么是WEB 服务器</h2><h3 id=\"1概念\" style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 22px; color: rgb(79, 79, 79); line-height: 30px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255);\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t10\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t10\"></a>1、概念</h3><blockquote style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 16px; color: rgba(0, 0, 0, 0.5); border-left: 8px solid rgb(221, 223, 228); background: rgb(238, 240, 244); overflow: auto; overflow-wrap: break-word; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; font-size: 14px; font-variant-ligatures: common-ligatures; white-space: normal; word-break: break-word !important;\"><ol style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p>一台负责提供网页的电脑，主要是各种编程语言构建而成的，通过HTTP协议传给客户端（一般是指网页浏览器）。</p></li><li><p>一个提供网页的服务器程序</p></li><li><p>服务器是一种被动程序：只有当Internet上运行在其他计算机中的浏览器发出请求时，服务器才会响应</p></li></ol></blockquote><h3 id=\"2常见的web服务器\" style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 22px; color: rgb(79, 79, 79); line-height: 30px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255);\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t11\"></a><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t11\"></a>2、常见的WEB服务器</h3><ol style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;\">Tomcat服务器</p><blockquote style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 16px; color: rgba(0, 0, 0, 0.5); border-left: 8px solid rgb(221, 223, 228); background: rgb(238, 240, 244); overflow: auto; overflow-wrap: break-word; word-break: break-word !important;\"><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 14px; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word;\">Tomcat是一个实现了JAVA EE标准的最小的WEB服务器，是Apache 软件基金会的Jakarta 项目中的一个核心项目，由Apache、Sun 和其他一些公司及个人共同开发而成。因为Tomcat 技术先进、性能稳定，而且开源免费，因而深受Java 爱好者的喜爱并得到了部分软件开发商的认可，成为目前比较流行的Web 应用服务器。学习JavaWeb开发一般都使用Tomcat服务器，该服务器支持全部JSP以及Servlet规范</p></blockquote></li><li><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;\">Apache2服务器</p><blockquote style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 16px; color: rgba(0, 0, 0, 0.5); border-left: 8px solid rgb(221, 223, 228); background: rgb(238, 240, 244); overflow: auto; overflow-wrap: break-word; word-break: break-word !important;\"><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 14px; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word;\">Apache HTTP Server（简称Apache）是Apache软件基金会的一个开放源代码的网页服务器软件，可以在大多数电脑操作系统中运行，由于其跨平台和安全性被广泛使用，是最流行的Web服务器软件之一。它快速可靠，并且可以通过简单API扩充，将Python/Perl等解析器编译到服务器中</p></blockquote></li><li><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;\">IBM WebSphere服务器</p><blockquote style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 16px; color: rgba(0, 0, 0, 0.5); border-left: 8px solid rgb(221, 223, 228); background: rgb(238, 240, 244); overflow: auto; overflow-wrap: break-word; word-break: break-word !important;\"><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 14px; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word;\">WebSphere Application Server 是一种功能完善、开放的Web应用程序服务器，是IBM公司电子商务计划的核心部分，它是基于 Java 的应用环境，用于建立、部署和管理 Internet 和 Intranet Web 应用程序。这一整套产品进行了扩展，以适应 Web应用程序服务器的需要，范围从简单到高级直到企业级</p></blockquote></li><li><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;\">WebLogic服务器</p><blockquote style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 16px; color: rgba(0, 0, 0, 0.5); border-left: 8px solid rgb(221, 223, 228); background: rgb(238, 240, 244); overflow: auto; overflow-wrap: break-word; word-break: break-word !important;\"><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 14px; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word;\">是美商Oracle的主要产品之一，系购并得来。是商业市场上主要的Java（J2EE）应用服务器软件之一，是世界上第一个成功商业化的J2EE应用服务器，目前已推出到12c（12.1.1）版。而此产品也延伸出WebLogic Portal, WebLogic Integration等企业用的中间件（但目前Oracle主要以Fusion Middleware融合中间件来取代这些WebLogic Server之外的企业包），以及OEPE（Oracle Enterprise Pack for Eclipse）开发工具。<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\"/>WebLogic最早由WebLogic Inc.开发，后并入BEA公司，最终BEA公司又并入Oracle公司</p></blockquote></li><li><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;\">Nginx服务器</p><blockquote style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 16px; color: rgba(0, 0, 0, 0.5); border-left: 8px solid rgb(221, 223, 228); background: rgb(238, 240, 244); overflow: auto; overflow-wrap: break-word; word-break: break-word !important;\"><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 14px; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word;\">Nginx（发音同engine x）是一个 Web服务器，也可以用作反向代理，负载平衡器和 HTTP缓存。该软件由 Igor Sysoev 创建，并于2004年首次公开发布。同名公司成立于2011年，以提供支持。<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\"/>Nginx 是免费的开源软件，根据类似 BSD许可证的条款发布。大部分 Web服务器通常使用 NGINX 作为负载均衡器。</p></blockquote></li><li><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;\">IIS服务器</p><blockquote style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 16px; color: rgba(0, 0, 0, 0.5); border-left: 8px solid rgb(221, 223, 228); background: rgb(238, 240, 244); overflow: auto; overflow-wrap: break-word; word-break: break-word !important;\"><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 14px; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word;\">Microsoft的Web服务器产品为Internet Information Services （IIS），IIS 是允许在公共Intranet或Internet上发布信息的Web服务器。ⅡS是目前最流行的Web服务器产品之一，很多著名的网站都是建立在ⅡS的平 台上。IIS提供了一个图形界面的管理工具，称为Internet信息服务管理器，可用于监视配置和控制Internet服务</p></blockquote></li><li><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word;\">Lighttpd服务器</p><blockquote style=\"box-sizing: border-box; outline: 0px; margin: 0px 0px 24px; padding: 16px; color: rgba(0, 0, 0, 0.5); border-left: 8px solid rgb(221, 223, 228); background: rgb(238, 240, 244); overflow: auto; overflow-wrap: break-word; word-break: break-word !important;\"><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 0px; padding: 0px; font-size: 14px; color: rgb(153, 153, 153); line-height: 22px; overflow-wrap: break-word;\">Lighttpd是由一个德国人写的开源软件，其目标是提供一个专门针对高性能网站，安全、快<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\"/>速、兼容性好并且灵活的Web Server环境。它具有内存开销低、CPU占用率低、效能好，以及<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\"/>模块丰富等特点。支持FastCGI、CGI. Auth、输出压缩(output compress )、URL重写及Alias<br style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word;\"/>等重要功能。Lighttpd跟Nginx一样，也是一款轻量级Web服务器，是Nginx的竞争对手之一</p></blockquote></li></ol><p><img src=\"http://127.0.0.1:8080/static/upload/images/article/content/20200728/1595943385859062393.png\" alt=\"1595943385859062393.png\"/></p>', 'http://localhost:8080/static/upload/images/article/cover/303f6ec78bfa4437b474b67d1ca39e0d.jpg', '2020-07-28 13:56:19', '2020-07-29 04:58:26', '1', '2');
INSERT INTO `article` VALUES ('20', 'vue中使用vuex(超详细)', 'vue中使用vuex(超详细)vuex是使用vue中必不可少', '<h1 id=\"articleContentId\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 28px; overflow-wrap: break-word; color: rgb(34, 34, 38); word-break: break-all; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">vue中使用vuex(超详细)</h1><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">vuex是使用vue中必不可少的一部分，基于父子、兄弟组件，我们传值可能会很方便，但是如果是没有关联的组件之间要使用同一组数据，就显得很无能为力，那么vuex就很好的解决了我们这种问题，它相当于一个公共仓库，保存着所有组件都能共用的数据。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">那么，我们一起来看看vue项目怎么使用它吧。（如果你对vuex有一定了解，不是刚接触的小白，请忽略第一步，直接查看第二步）</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; color: rgb(243, 59, 69);\">一、适合初学者使用，保存数据以及获取数据</span></span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">1、在store文件夹，新建个index.js文件（命名看个人习惯，如果没有该文件夹，可以新建一个，当然也可以不建文件夹，直接新建个js文件也是可以的）</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">在新建的js文件中写入如下代码:</p><pre name=\"code\" style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 24px; padding: 8px; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; background-color: rgb(255, 255, 255);\">import&nbsp;Vue&nbsp;from&nbsp;&quot;vue&quot;import&nbsp;Vuex&nbsp;from&nbsp;&quot;vuex&quot;Vue.use(Vuex);export&nbsp;default&nbsp;new&nbsp;Vuex.Store({state:{pathName:&nbsp;&quot;&quot;,currDbSource:&nbsp;{},currJobData:&nbsp;{},DbSource:&nbsp;[]},mutations:{//&nbsp;保存当前菜单栏的路径savePath(state,pathName){state.pathName&nbsp;=&nbsp;pathName;},//&nbsp;保存当前点击的数据源saveCurrDbSource(state,currDbSource){state.currDbSource&nbsp;=&nbsp;currDbSource;},//&nbsp;保存当前点击的元数据saveCurrJobData(state,currJobData){state.currJobData&nbsp;=&nbsp;currJobData;},//&nbsp;保存所有数据源saveDbSource(state,DbSource){state.DbSource&nbsp;=&nbsp;DbSource;}}})</pre><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">这里解释一下各个代码段的作用：state是自定义的一些变量，需要用来保存数据，mutations是用来触发事件，相当于方法，用户需要通过触发这个方法，借此来保存数据，参数的话，第二个参数就是用户传入的值，然后在方法中赋值给state中的变量</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">2、main.js引用：（注意路径即可）</p><pre name=\"code\" style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 24px; padding: 8px; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; background-color: rgb(255, 255, 255);\">//&nbsp;引入vuex-storeimport&nbsp;store&nbsp;from&nbsp;&#39;./store/index&#39;;new&nbsp;Vue({el:&nbsp;&#39;#app&#39;,router,store,render:&nbsp;h&nbsp;=&gt;&nbsp;h(App)});</pre><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">3、保存数据：（场景举例：当我点击按钮后，我需要把当前的数据保存到vuex中，然后跳转到别的路由，然后使用这些数据）</p><pre name=\"code\" style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 24px; padding: 8px; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; background-color: rgb(255, 255, 255);\">methods:{click(){//&nbsp;点击按钮进行一些操作，然后保存数据this.$store.commit(&#39;saveCurrDbSource&#39;,this.db)}}</pre><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">这里的第一个参数是要触发的方法，也就是上面mutations中的方法，第二个参数是你要传递的数据</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">4、获取变量：（当数据初始获取不到时，可以使用计算属性用来获取）</p><pre name=\"code\" style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 24px; padding: 8px; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; background-color: rgb(255, 255, 255);\">this.$store.state.变量名//&nbsp;例如this.store.state.currDbSource</pre><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">这样其他组件就可以共用这个保存起来的数据了，也能进行相应的修改</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; overflow-wrap: break-word; color: rgb(243, 59, 69);\"><span style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-weight: 700; overflow-wrap: break-word;\">二、模块化（适合有部分基础的人）</span></span></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">当然，上述方法中我们把所有东西都写在一个文件中了，这样数据多的时候，耦合度太高，也不便于维护，而且mutations也不能解决异步问题，这里就介绍另一种方式以及actions</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">actions：看过官网介绍的人都知道，这是间接触发mutations方法的一种 &quot; 中间商 &quot;，而且它可以执行异步操作，避免用户去直接操作state</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">1、state.js ：保存所有数据，以对象的方式导出</p><pre name=\"code\" style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 24px; padding: 8px; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; background-color: rgb(255, 255, 255);\">export&nbsp;default&nbsp;{pathName:&nbsp;&#39;&#39;,&nbsp;//&nbsp;路由currDbSource:&nbsp;{},&nbsp;//&nbsp;当前数据源currJobData:&nbsp;{},&nbsp;//&nbsp;当前元数据DbSource:&nbsp;[],&nbsp;//&nbsp;所有数据源，供元数据界面下拉列表使用selectJobMeta:&nbsp;{},&nbsp;//&nbsp;当前选择的元数据（搜索后点击的单条数据）specialSubject:&nbsp;[],&nbsp;//&nbsp;专题数据（多条）duplicateJobMeta:&nbsp;{},&nbsp;//&nbsp;复制的数据};</pre><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">2、mutations.js ：保存所有方法，用来改变state的数据</p><pre name=\"code\" style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 24px; padding: 8px; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; background-color: rgb(255, 255, 255);\">//&nbsp;保存当前菜单栏的路径export&nbsp;const&nbsp;savePath&nbsp;=&nbsp;(state,&nbsp;pathName)&nbsp;=&gt;&nbsp;{state.pathName&nbsp;=&nbsp;pathName;};//&nbsp;保存当前点击的数据源export&nbsp;const&nbsp;saveCurrDbSource&nbsp;=&nbsp;(state,&nbsp;currDbSource)&nbsp;=&gt;&nbsp;{state.currDbSource&nbsp;=&nbsp;currDbSource;};//&nbsp;保存当前点击的元数据export&nbsp;const&nbsp;saveCurrJobData&nbsp;=&nbsp;(state,&nbsp;currJobData)&nbsp;=&gt;&nbsp;{state.currJobData&nbsp;=&nbsp;null;state.currJobData&nbsp;=&nbsp;currJobData;};//&nbsp;保存所有数据源export&nbsp;const&nbsp;saveDbSource&nbsp;=&nbsp;(state,&nbsp;DbSource)&nbsp;=&gt;&nbsp;{state.DbSource&nbsp;=&nbsp;DbSource;};//&nbsp;保存搜索后选择的那一条元数据export&nbsp;const&nbsp;saveSelectJobMeta&nbsp;=&nbsp;(state,&nbsp;selectJobMeta)&nbsp;=&gt;&nbsp;{state.selectJobMeta&nbsp;=&nbsp;selectJobMeta;};//&nbsp;保存搜索的那一类专题export&nbsp;const&nbsp;saveSpecialSubject&nbsp;=&nbsp;(state,&nbsp;specialSubject)&nbsp;=&gt;&nbsp;{state.specialSubject&nbsp;=&nbsp;specialSubject;state.selectJobMeta&nbsp;=&nbsp;{};};//&nbsp;保存复制的元数据（名称为空）export&nbsp;const&nbsp;saveDuplicateJobMeta&nbsp;=&nbsp;(state,&nbsp;duplicateJobMeta)&nbsp;=&gt;&nbsp;{state.duplicateJobMeta&nbsp;=&nbsp;duplicateJobMeta;};</pre><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">3、actions.js ：暴露给用户使用，借此触发mutations中的方法，保存数据（可执行异步操作）</p><pre name=\"code\" style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 24px; padding: 8px; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; background-color: rgb(255, 255, 255);\">//&nbsp;触发保存菜单栏的路径方法export&nbsp;const&nbsp;savePath&nbsp;=&nbsp;({&nbsp;commit&nbsp;},&nbsp;payload)&nbsp;=&gt;&nbsp;{commit(&#39;savePath&#39;,&nbsp;payload);};//&nbsp;触发获取当前点击的数据源方法export&nbsp;const&nbsp;saveCurrDbSource&nbsp;=&nbsp;({&nbsp;commit&nbsp;},&nbsp;payload)&nbsp;=&gt;&nbsp;{commit(&#39;saveCurrDbSource&#39;,&nbsp;payload);};//&nbsp;触发获取当前点击的元数据方法export&nbsp;const&nbsp;saveCurrJobData&nbsp;=&nbsp;({&nbsp;commit&nbsp;},&nbsp;payload)&nbsp;=&gt;&nbsp;{commit(&#39;saveCurrJobData&#39;,&nbsp;payload);};//&nbsp;触发获取所有数据源方法export&nbsp;const&nbsp;saveDbSource&nbsp;=&nbsp;({&nbsp;commit&nbsp;},&nbsp;payload)&nbsp;=&gt;&nbsp;{commit(&#39;saveDbSource&#39;,&nbsp;payload);};//&nbsp;触发保存搜索后选择单条元数据方法export&nbsp;const&nbsp;saveSelectJobMeta&nbsp;=&nbsp;({&nbsp;commit&nbsp;},&nbsp;payload)&nbsp;=&gt;&nbsp;{commit(&#39;saveSelectJobMeta&#39;,&nbsp;payload);};//&nbsp;触发保存搜索专题数据方法export&nbsp;const&nbsp;saveSpecialSubject&nbsp;=&nbsp;({&nbsp;commit&nbsp;},&nbsp;payload)&nbsp;=&gt;&nbsp;{commit(&#39;saveSpecialSubject&#39;,&nbsp;payload);};//&nbsp;触发保存复制元数据方法export&nbsp;const&nbsp;saveDuplicateJobMeta&nbsp;=&nbsp;({&nbsp;commit&nbsp;},&nbsp;payload)&nbsp;=&gt;&nbsp;{commit(&#39;saveDuplicateJobMeta&#39;,&nbsp;payload);};</pre><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">这里有2种方式：</p><pre name=\"code\" style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 24px; padding: 8px; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; background-color: rgb(255, 255, 255);\">//&nbsp;方法一：export&nbsp;const&nbsp;saveDbSource&nbsp;=&nbsp;(context,&nbsp;payload)&nbsp;=&gt;&nbsp;{context.commit(&#39;saveDbSource&#39;,&nbsp;payload);};//&nbsp;方法二：export&nbsp;const&nbsp;saveDbSource&nbsp;=&nbsp;({&nbsp;commit&nbsp;},&nbsp;payload)&nbsp;=&gt;&nbsp;{commit(&#39;saveDbSource&#39;,&nbsp;payload);};</pre><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">第一种是通过 context上下文用来触发事件，一种是直接通过commit，为了保存数据，都需要加第二个参数payload，不然保存到vuex的数据就是空值</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">4、index.js：引入相应模块，暴露出store，供vue注册后全局使用</p><pre name=\"code\" style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 24px; padding: 8px; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; background-color: rgb(255, 255, 255);\">import&nbsp;Vue&nbsp;from&nbsp;&#39;vue&#39;;import&nbsp;Vuex&nbsp;from&nbsp;&#39;vuex&#39;;import&nbsp;state&nbsp;from&nbsp;&#39;./state&#39;;import&nbsp;*&nbsp;as&nbsp;actions&nbsp;from&nbsp;&#39;./actions&#39;;import&nbsp;*&nbsp;as&nbsp;mutations&nbsp;from&nbsp;&#39;./mutations&#39;;Vue.use(Vuex);export&nbsp;default&nbsp;new&nbsp;Vuex.Store({state,actions,mutations});</pre><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">5、main.js中引入index.js</p><pre name=\"code\" style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 24px; padding: 8px; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; background-color: rgb(255, 255, 255);\">//&nbsp;引入vuex-storeimport&nbsp;store&nbsp;from&nbsp;&#39;./store/index&#39;;new&nbsp;Vue({el:&nbsp;&#39;#app&#39;,router,store,render:&nbsp;h&nbsp;=&gt;&nbsp;h(App)});</pre><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">6、保存数据</p><pre name=\"code\" style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 24px; padding: 8px; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; background-color: rgb(255, 255, 255);\">import&nbsp;{&nbsp;mapActions&nbsp;}&nbsp;from&nbsp;&#39;vuex&#39;;//&nbsp;2种方式//&nbsp;方法一（dispatch）this.$store.dispatch(&#39;saveDbSource&#39;,&nbsp;this.DbSource);//&nbsp;方法二（映射）//&nbsp;1、通过methods方法添加映射关系&nbsp;methods:&nbsp;{...mapActions([&#39;saveDbSource&#39;])}//&nbsp;2、使用this.saveDbSource</pre><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">这里也有2种保存数据的方法，第一种就是直接操作方法，通过disptach派发给actions，让actions去触发</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">第二种就是通过在methods中添加映射关系，数组方式，意味着我们可以在数组中写多个方法（这里数组中的每一个方法名是actions.js文件中所定义的方法名），然后在需要使用的地方直接this.方法名即可。当然，也可以直接绑定给html中的某个事件。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">值的注意的是，避免和methods中自己定义的其他方法的名字冲突</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">7、获取数据</p><pre name=\"code\" style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 24px; padding: 8px; position: relative; font-family: Consolas, Inconsolata, Courier, monospace; white-space: pre-wrap; overflow-wrap: break-word; overflow-x: auto; font-size: 14px; line-height: 22px; background-color: rgb(255, 255, 255);\">import&nbsp;{&nbsp;mapState&nbsp;}&nbsp;from&nbsp;&#39;vuex&#39;;computed:&nbsp;{...mapState([&#39;DbSource&#39;]),},watch:&nbsp;{DbSource(currVal)&nbsp;{//&nbsp;监听mapState中的变量，当数据变化（有值、值改变等），//&nbsp;保证能拿到完整的数据，不至于存在初始化没有数据的问题，然后可以赋给本组件data中的变量this.currVal&nbsp;=&nbsp;currVal;}}</pre><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">通过计算属性，当数据发生改变，我们可以保证拿到的是响应过后的数据，也是数组形式，意味着我们可以拿到多组数据，这里数组中的数据也是state.js中定义的变量</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">使用的时候，可以直接通过this.变量名拿到，例如本例中的 this.DbSource，我们可以把它赋给我们自定义的变量，也可以直接使用</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">值的注意的是，避免和data中自己定义的其他变量的名字冲突</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">至此，我们就完成了vuex的保存以及获取数据，希望对你有所帮助。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">当然，我们需要把一vuex中的一组数据过滤，其他组件都共用过滤后的数据，这种情况大家可能会用到getters，这里我就不多赘述了，有兴趣的小伙伴可以自己了解一下。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">附上vuex的运行过程，官网的图片：组件派发任务到actions，actions触发mutations中的方法，然后mutations来改变state中的数据，数据变更后响应推送给组件，组件重新渲染</p><p style=\"text-align:center\"><img alt=\"\" src=\"/ueditor/jsp/upload/image/20200728/1595944640549073868.png\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; border: 0px; max-width: 100%; height: auto; overflow-wrap: break-word; cursor: zoom-in;\"/></p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-x: auto; overflow-wrap: break-word; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">如有问题，请指出，接受批评。</p><p><br style=\"text-align: left;\"/></p>', 'http://localhost:8080/static/upload/images/article/cover/aafd9c9bba0140b39a62800f63826703.jpg', '2020-07-28 13:58:09', '2020-07-28 13:58:09', '1', '17');
INSERT INTO `article` VALUES ('21', 'Webpack的基本使用', 'Webpack的基本使用一、什么是WebpackWebpac', '<h1 id=\"articleContentId\" style=\"box-sizing: border-box; outline: 0px; margin: 0px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 28px; overflow-wrap: break-word; color: rgb(34, 34, 38); word-break: break-all; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">Webpack的基本使用</h1><h3 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 22px; color: rgb(79, 79, 79); line-height: 30px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">一、什么是Webpack</h3><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">Webpack 是一个前端资源加载/打包工具。它将根据模块的依赖关系进行静态分析，然后将这些模块按照指定的规则生成对应的静态资源。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">从图中我们可以看出，Webpack 可以将多种静态资源 js、css、less 转换成一个静态文件，减少了页面的请求。</p><p></p><h3 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 22px; color: rgb(79, 79, 79); line-height: 30px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">二、Webpack安装</h3><h4 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 20px; color: rgb(79, 79, 79); line-height: 28px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a id=\"1_8\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\"></a>1、全局安装</h4><pre style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; overflow-wrap: break-word; background-color: rgb(40, 44, 52); border: none; font-variant-ligatures: common-ligatures;\">npm&nbsp;install&nbsp;-g&nbsp;webpack&nbsp;webpack-cli1</pre><h4 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 20px; color: rgb(79, 79, 79); line-height: 28px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a id=\"2_14\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\"></a>2、安装后查看版本号</h4><pre style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; overflow-wrap: break-word; background-color: rgb(40, 44, 52); border: none; font-variant-ligatures: common-ligatures;\">webpack&nbsp;-v1</pre><p style=\"text-align:center\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t2\"></a></p><p style=\"text-align:center\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t2\"></a></p><h3 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 22px; color: rgb(79, 79, 79); line-height: 30px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a id=\"_19\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\"></a>三、初始化项目<br/></h3><h4 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 20px; color: rgb(79, 79, 79); line-height: 28px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a id=\"1webpack_20\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\"></a>1、创建webpack文件夹</h4><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">进入webpack目录，执行命令</p><pre style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; overflow-wrap: break-word; background-color: rgb(40, 44, 52); border: none; font-variant-ligatures: common-ligatures;\">npm&nbsp;init&nbsp;-y1</pre><h4 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 20px; color: rgb(79, 79, 79); line-height: 28px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a id=\"2src_26\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\"></a>2、创建src文件夹</h4><h4 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 20px; color: rgb(79, 79, 79); line-height: 28px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a id=\"3srccommonjs_27\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\"></a>3、src下创建common.js</h4><pre style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; overflow-wrap: break-word; background-color: rgb(40, 44, 52); border: none; font-variant-ligatures: common-ligatures;\">exports.info&nbsp;=&nbsp;function&nbsp;(str)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;document.write(str);}123</pre><h4 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 20px; color: rgb(79, 79, 79); line-height: 28px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a id=\"4srcutilsjs_34\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\"></a>4、src下创建utils.js</h4><pre style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; overflow-wrap: break-word; background-color: rgb(40, 44, 52); border: none; font-variant-ligatures: common-ligatures;\">exports.add&nbsp;=&nbsp;function&nbsp;(a,&nbsp;b)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;a&nbsp;+&nbsp;b;}123</pre><h4 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 20px; color: rgb(79, 79, 79); line-height: 28px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a id=\"5srcmainjs_41\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\"></a>5、src下创建main.js</h4><pre style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; overflow-wrap: break-word; background-color: rgb(40, 44, 52); border: none; font-variant-ligatures: common-ligatures;\">const&nbsp;common&nbsp;=&nbsp;require(&#39;./common&#39;);const&nbsp;utils&nbsp;=&nbsp;require(&#39;./utils&#39;);common.info(&#39;Hello&nbsp;world!&#39;&nbsp;+&nbsp;utils.add(100,&nbsp;200));123</pre><p style=\"text-align:center\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t3\"></a></p><p style=\"text-align:center\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t3\"></a></p><h3 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 22px; color: rgb(79, 79, 79); line-height: 30px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a id=\"JS_48\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\"></a>四、JS打包<br/></h3><h4 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 20px; color: rgb(79, 79, 79); line-height: 28px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a id=\"1webpackwebpackconfigjs_49\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\"></a>1、webpack目录下创建配置文件webpack.config.js</h4><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">以下配置的意思是：读取当前项目目录下src文件夹中的main.js（入口文件）内容，分析资源依赖，把相关的js文件打包，打包后的文件放入当前目录的dist文件夹下，打包后的js文件名为bundle.js</p><pre style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; overflow-wrap: break-word; background-color: rgb(40, 44, 52); border: none; font-variant-ligatures: common-ligatures;\">const&nbsp;path&nbsp;=&nbsp;require(&quot;path&quot;);&nbsp;//Node.js内置模块module.exports&nbsp;=&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;entry:&nbsp;&#39;./src/main.js&#39;,&nbsp;//配置入口文件\r\n&nbsp;&nbsp;&nbsp;&nbsp;output:&nbsp;{\r\n&nbsp;&nbsp;&nbsp;path:&nbsp;path.resolve(__dirname,&nbsp;&#39;./dist&#39;),&nbsp;//输出路径，__dirname：当前文件所在路径\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filename:&nbsp;&#39;bundle.js&#39;&nbsp;//输出文件\r\n&nbsp;&nbsp;&nbsp;&nbsp;}}12345678</pre><h4 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 20px; color: rgb(79, 79, 79); line-height: 28px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a id=\"2_62\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\"></a>2、命令行执行编译命令</h4><pre style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; overflow-wrap: break-word; background-color: rgb(40, 44, 52); border: none; font-variant-ligatures: common-ligatures;\">webpack&nbsp;#有黄色警告\r\nwebpack&nbsp;--mode=development&nbsp;#没有警告\r\n#执行后查看bundle.js&nbsp;里面包含了上面两个js文件的内容并惊醒了代码压缩123</pre><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">也可以配置项目的npm运行命令，修改package.json文件</p><pre style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; overflow-wrap: break-word; background-color: rgb(40, 44, 52); border: none; font-variant-ligatures: common-ligatures;\">&quot;scripts&quot;:&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;//...,\r\n&nbsp;&nbsp;&nbsp;&nbsp;&quot;dev&quot;:&nbsp;&quot;webpack&nbsp;--mode=development&quot;\r\n&nbsp;}1234</pre><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">运行npm命令执行打包</p><pre style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; overflow-wrap: break-word; background-color: rgb(40, 44, 52); border: none; font-variant-ligatures: common-ligatures;\">npm&nbsp;run&nbsp;dev1</pre><p style=\"text-align:center\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t4\"></a></p><p style=\"text-align:center\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t4\"></a></p><h3 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 22px; color: rgb(79, 79, 79); line-height: 30px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a id=\"3webpackindexhtml_82\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\"></a>3、webpack目录下创建index.html<br/></h3><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">引用bundle.js</p><pre style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; overflow-wrap: break-word; background-color: rgb(40, 44, 52); border: none; font-variant-ligatures: common-ligatures;\">&lt;body&gt;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;script&nbsp;src=&quot;dist/bundle.js&quot;&gt;&lt;/script&gt;&lt;/body&gt;123</pre><h4 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 20px; color: rgb(79, 79, 79); line-height: 28px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a id=\"4indexhtml_90\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\"></a>4、浏览器中查看index.html</h4><p style=\"text-align:center\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t5\"></a></p><p style=\"text-align:center\"><a style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\" name=\"t5\"></a></p><h3 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 22px; color: rgb(79, 79, 79); line-height: 30px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a id=\"CSS_91\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\"></a>五、CSS打包<br/></h3><h4 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 20px; color: rgb(79, 79, 79); line-height: 28px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a id=\"1styleloader_cssloader_92\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\"></a>1、安装style-loader和 css-loader</h4><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">Webpack 本身只能处理 JavaScript 模块，如果要处理其他类型的文件，就需要使用 loader 进行转换。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">Loader 可以理解为是模块和资源的转换器。</p><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">首先我们需要安装相关Loader插件，css-loader 是将 css 装载到 javascript；style-loader 是让 javascript 认识css</p><pre style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; overflow-wrap: break-word; background-color: rgb(40, 44, 52); border: none; font-variant-ligatures: common-ligatures;\">npm&nbsp;install&nbsp;--save-dev&nbsp;style-loader&nbsp;css-loader&nbsp;\r\n1</pre><h4 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 20px; color: rgb(79, 79, 79); line-height: 28px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a id=\"2webpackconfigjs_103\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\"></a>2、修改webpack.config.js</h4><pre style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; overflow-wrap: break-word; background-color: rgb(40, 44, 52); border: none; font-variant-ligatures: common-ligatures;\">const&nbsp;path&nbsp;=&nbsp;require(&quot;path&quot;);&nbsp;//Node.js内置模块module.exports&nbsp;=&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;//...,\r\n&nbsp;&nbsp;&nbsp;&nbsp;output:{},\r\n&nbsp;&nbsp;&nbsp;&nbsp;module:&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rules:&nbsp;[&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;test:&nbsp;/\\.css$/,&nbsp;&nbsp;&nbsp;&nbsp;//打包规则应用到以css结尾的文件上\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;use:&nbsp;[&#39;style-loader&#39;,&nbsp;&#39;css-loader&#39;]\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}}12345678910111213</pre><h4 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 20px; color: rgb(79, 79, 79); line-height: 28px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a id=\"3srcstylecss_120\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\"></a>3、在src文件夹创建style.css</h4><pre style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; overflow-wrap: break-word; background-color: rgb(40, 44, 52); border: none; font-variant-ligatures: common-ligatures;\">body{\r\n&nbsp;&nbsp;&nbsp;&nbsp;background:pink;}123</pre><h4 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 20px; color: rgb(79, 79, 79); line-height: 28px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a id=\"4mainjs_127\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\"></a>4、修改main.js</h4><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">在第一行引入style.css</p><pre style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 24px; padding: 8px 16px 6px 56px; position: relative; font-family: &quot;Source Code Pro&quot;, &quot;DejaVu Sans Mono&quot;, &quot;Ubuntu Mono&quot;, &quot;Anonymous Pro&quot;, &quot;Droid Sans Mono&quot;, Menlo, Monaco, Consolas, Inconsolata, Courier, monospace, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 14px; overflow: auto hidden; line-height: 22px; overflow-wrap: break-word; background-color: rgb(40, 44, 52); border: none; font-variant-ligatures: common-ligatures;\">require(&#39;./style.css&#39;);1</pre><h4 style=\"box-sizing: border-box; outline: 0px; margin: 8px 0px 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; font-size: 20px; color: rgb(79, 79, 79); line-height: 28px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\"><a id=\"5indexhtml_134\" style=\"box-sizing: border-box; outline: none; margin: 0px; padding: 0px; font-weight: normal; cursor: pointer; background-color: transparent; color: rgb(78, 161, 219); overflow-wrap: break-word;\"></a>5、浏览器中查看index.html</h4><p style=\"box-sizing: border-box; outline: 0px; margin-top: 0px; margin-bottom: 16px; padding: 0px; font-family: &quot;Microsoft YaHei&quot;, &quot;SF Pro Display&quot;, Roboto, Noto, Arial, &quot;PingFang SC&quot;, sans-serif; color: rgb(77, 77, 77); line-height: 26px; overflow-wrap: break-word; font-variant-ligatures: common-ligatures; white-space: normal; background-color: rgb(255, 255, 255); text-align: left;\">看看背景是不是变成粉色啦？</p><p><br style=\"text-align: left;\"/></p>', 'http://localhost:8080/static/upload/images/article/cover/ddafc54f42244594a2d5275dc6ed14d0.png', '2020-07-28 14:01:55', '2020-07-28 14:01:55', '1', '18');
INSERT INTO `article` VALUES ('28', '一起来学习node', '如何安装node.js以及镜像的切换window下安装nod', '<h1 cid=\"n0\" mdtype=\"heading\" class=\"md-end-block md-heading\" style=\"box-sizing: border-box;break-after: avoid-page;break-inside: avoid;orphans: 4;font-size: 2.25em;margin-top: 1rem;margin-bottom: 1rem;position: relative;line-height: 1.2;cursor: text;padding-bottom: 0.3em;border-bottom: 1px solid rgb(238, 238, 238);white-space: pre-wrap\"><span md-inline=\"plain\" class=\"md-plain md-expand\" style=\"box-sizing: border-box\">如何安装node.js以及镜像的切换</span></h1><p cid=\"n2\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0.8em;margin-bottom: 0.8em;white-space: pre-wrap;position: relative\"><br/></p><h2 cid=\"n3\" mdtype=\"heading\" class=\"md-end-block md-heading\" style=\"box-sizing: border-box;break-after: avoid-page;break-inside: avoid;orphans: 4;font-size: 1.75em;margin-top: 1rem;margin-bottom: 1rem;position: relative;line-height: 1.225;cursor: text;padding-bottom: 0.3em;border-bottom: 1px solid rgb(238, 238, 238);white-space: pre-wrap\"><span md-inline=\"plain\" style=\"box-sizing: border-box\">window下安装node.js(.msi版本)</span></h2><p cid=\"n4\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0.8em;margin-bottom: 0.8em;white-space: pre-wrap;position: relative\"><br/></p><blockquote cid=\"n5\" mdtype=\"blockquote\" style=\"box-sizing: border-box;margin: 0.8em 0px;border-left: 4px solid rgb(230, 126, 34);padding: 0px 15px;color: rgb(119, 119, 119);background: rgb(245, 245, 245)\"><p cid=\"n6\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0px;margin-bottom: 0px;white-space: pre-wrap;position: relative\"><span md-inline=\"link\" class=\"md-meta-i-c  md-link\" style=\"box-sizing: border-box\"><a spellcheck=\"false\" href=\"http://nodejs.cn/\" style=\"box-sizing: border-box;cursor: pointer;color: rgb(65, 131, 196);-webkit-user-drag: none\"><span md-inline=\"plain\" style=\"box-sizing: border-box\">下载地址</span></a></span></p></blockquote><p cid=\"n7\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0.8em;margin-bottom: 0.8em;white-space: pre-wrap;position: relative\"><br/></p><ol start=\"\" cid=\"n8\" mdtype=\"list\" style=\"box-sizing: border-box;margin-top: 0.8em;margin-bottom: 0.8em;padding-left: 30px;position: relative\" class=\" list-paddingleft-2\"><li><p cid=\"n10\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0px;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"imgtag\" data-src=\"https://i.loli.net/2020/08/28/XQdq7W2S1vO9RY4.png\" class=\"md-image md-img-loaded\" style=\"box-sizing: border-box;min-width: 10px;min-height: 10px;position: relative;font-family: monospace;vertical-align: top;display: inline-block;width: 934px\"><img alt=\"image-20200828111740989\" src=\"https://i.loli.net/2020/08/28/XQdq7W2S1vO9RY4.png\" referrerpolicy=\"no-referrer\" style=\"box-sizing: border-box;border-width: 0px 4px 0px 2px;border-top-style: initial;border-right-style: solid;border-bottom-style: initial;border-left-style: solid;border-top-color: initial;border-right-color: transparent;border-bottom-color: initial;border-left-color: transparent;border-image: initial;vertical-align: middle;max-width: 100%;image-orientation: from-image;cursor: default;display: block\"/></span></p></li><li><p cid=\"n12\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0px;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"image\" data-src=\"https://blog-pic1.oss-cn-beijing.aliyuncs.com/blog/images/image-20200828112053483.png\" class=\"md-image md-img-loaded\" style=\"box-sizing: border-box;min-width: 10px;min-height: 10px;position: relative;font-family: monospace;vertical-align: top;display: inline-block;width: 934px\"><img referrerpolicy=\"no-referrer\" alt=\"image-20200828112053483\" src=\"http://139.224.82.98:80/static/upload/images/article/content/20200828/1598601586022014530.png\" style=\"box-sizing: border-box;border-width: 0px 4px 0px 2px;border-top-style: initial;border-right-style: solid;border-bottom-style: initial;border-left-style: solid;border-top-color: initial;border-right-color: transparent;border-bottom-color: initial;border-left-color: transparent;border-image: initial;vertical-align: middle;max-width: 100%;image-orientation: from-image;cursor: default;display: block\"/></span></p><p cid=\"n13\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0.5rem;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><br/></p></li><li><p cid=\"n15\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0px;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"plain\" style=\"box-sizing: border-box\">点击.mis安装包，一顿下一步</span></p></li><li><p cid=\"n17\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0px;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"plain\" style=\"box-sizing: border-box\">安装完成后 win+R 输入</span><span md-inline=\"strong\" class=\"md-pair-s \" style=\"box-sizing: border-box\"><strong style=\"box-sizing: border-box\">node --version</strong></span><span md-inline=\"plain\" style=\"box-sizing: border-box\"> 查看是否安装成功</span></p><p cid=\"n18\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0.5rem;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><br/></p></li></ol><p cid=\"n19\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0.8em;margin-bottom: 0.8em;white-space: pre-wrap;position: relative\"><span md-inline=\"image\" data-src=\"https://blog-pic1.oss-cn-beijing.aliyuncs.com/blog/images/image-20200828112757745.png\" class=\"md-image md-img-loaded\" style=\"box-sizing: border-box;min-width: 10px;min-height: 10px;position: relative;font-family: monospace;vertical-align: top;display: inline-block;width: 964px\"><img referrerpolicy=\"no-referrer\" alt=\"image-20200828112757745\" src=\"http://139.224.82.98:80/static/upload/images/article/content/20200828/1598601586126013166.png\" data-local-refresh=\"true\" style=\"box-sizing: border-box;border-width: 0px 4px 0px 2px;border-top-style: initial;border-right-style: solid;border-bottom-style: initial;border-left-style: solid;border-top-color: initial;border-right-color: transparent;border-bottom-color: initial;border-left-color: transparent;border-image: initial;vertical-align: middle;max-width: 100%;image-orientation: from-image;cursor: default;display: block\"/></span></p><h3 cid=\"n20\" mdtype=\"heading\" class=\"md-end-block md-heading\" style=\"box-sizing: border-box;break-after: avoid-page;break-inside: avoid;orphans: 4;font-size: 1.5em;margin-top: 1rem;margin-bottom: 1rem;position: relative;line-height: 1.43;cursor: text;white-space: pre-wrap\"><span md-inline=\"plain\" style=\"box-sizing: border-box\">node.js探究</span></h3><p cid=\"n21\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0.8em;margin-bottom: 0.8em;white-space: pre-wrap;position: relative\"><br/></p><blockquote cid=\"n22\" mdtype=\"blockquote\" style=\"box-sizing: border-box;margin: 0.8em 0px;border-left: 4px solid rgb(230, 126, 34);padding: 0px 15px;color: rgb(119, 119, 119);background: rgb(245, 245, 245)\"><p cid=\"n23\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0px;margin-bottom: 0px;white-space: pre-wrap;position: relative\"><span md-inline=\"plain\" style=\"box-sizing: border-box\">能使用node --version 查看版本号 说明以及帮我们配置了环境变量</span></p></blockquote><ol start=\"\" cid=\"n24\" mdtype=\"list\" style=\"box-sizing: border-box;margin-top: 0.8em;margin-bottom: 0.8em;padding-left: 30px;position: relative\" class=\" list-paddingleft-2\"><li><p cid=\"n26\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0px;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"plain\" style=\"box-sizing: border-box\">查看环境变量</span></p><p cid=\"n27\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0.5rem;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"image\" data-src=\"https://blog-pic1.oss-cn-beijing.aliyuncs.com/blog/images/image-20200828113208407.png\" class=\"md-image md-img-loaded\" style=\"box-sizing: border-box;min-width: 10px;min-height: 10px;position: relative;font-family: monospace;vertical-align: top;display: inline-block;width: 934px\"><img referrerpolicy=\"no-referrer\" alt=\"image-20200828113208407\" src=\"http://139.224.82.98:80/static/upload/images/article/content/20200828/1598601586161099990.png\" data-local-refresh=\"true\" style=\"box-sizing: border-box;border-width: 0px 4px 0px 2px;border-top-style: initial;border-right-style: solid;border-bottom-style: initial;border-left-style: solid;border-top-color: initial;border-right-color: transparent;border-bottom-color: initial;border-left-color: transparent;border-image: initial;vertical-align: middle;max-width: 100%;image-orientation: from-image;cursor: default;display: block\"/></span></p><p cid=\"n28\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0.5rem;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><br/></p></li><li><p cid=\"n30\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0px;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"plain\" style=\"box-sizing: border-box\">打开配置环境变量的目录</span><span md-inline=\"image\" data-src=\"https://blog-pic1.oss-cn-beijing.aliyuncs.com/blog/images/image-20200828113237557.png\" class=\"md-image md-img-loaded\" style=\"box-sizing: border-box;min-width: 10px;min-height: 10px;position: relative;font-family: monospace;vertical-align: top\"><img referrerpolicy=\"no-referrer\" alt=\"image-20200828113237557\" src=\"http://139.224.82.98:80/static/upload/images/article/content/20200828/1598601586199069382.png\" data-local-refresh=\"true\" style=\"box-sizing: border-box;border-width: 0px 4px 0px 2px;border-top-style: initial;border-right-style: solid;border-bottom-style: initial;border-left-style: solid;border-top-color: initial;border-right-color: transparent;border-bottom-color: initial;border-left-color: transparent;border-image: initial;vertical-align: middle;max-width: 100%;image-orientation: from-image;cursor: default\"/></span></p><p cid=\"n31\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0.5rem;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"strong\" class=\"md-pair-s \" style=\"box-sizing: border-box\"><strong style=\"box-sizing: border-box\">可以发现cmd中输入的实际上是执行当前目录下的命令 java环境变量也是同理</strong></span></p></li></ol><p cid=\"n32\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0.8em;margin-bottom: 0.8em;white-space: pre-wrap;position: relative\"><br/></p><h2 cid=\"n33\" mdtype=\"heading\" class=\"md-end-block md-heading\" style=\"box-sizing: border-box;break-after: avoid-page;break-inside: avoid;orphans: 4;font-size: 1.75em;margin-top: 1rem;margin-bottom: 1rem;position: relative;line-height: 1.225;cursor: text;padding-bottom: 0.3em;border-bottom: 1px solid rgb(238, 238, 238);white-space: pre-wrap\"><span md-inline=\"plain\" style=\"box-sizing: border-box\">window下安装node.js(.zip版本)</span></h2><p cid=\"n34\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0.8em;margin-bottom: 0.8em;white-space: pre-wrap;position: relative\"><br/></p><ol start=\"\" cid=\"n35\" mdtype=\"list\" style=\"box-sizing: border-box;margin-top: 0.8em;margin-bottom: 0.8em;padding-left: 30px;position: relative\" class=\" list-paddingleft-2\"><li><p cid=\"n37\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0px;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"plain\" style=\"box-sizing: border-box\">选择.zip版本下载解压</span><span md-inline=\"image\" data-src=\"https://blog-pic1.oss-cn-beijing.aliyuncs.com/blog/images/image-20200828114703599.png\" class=\"md-image md-img-loaded\" style=\"box-sizing: border-box;min-width: 10px;min-height: 10px;position: relative;font-family: monospace;vertical-align: top\"><img referrerpolicy=\"no-referrer\" alt=\"image-20200828114703599\" src=\"http://139.224.82.98:80/static/upload/images/article/content/20200828/1598601586243054696.png\" data-local-refresh=\"true\" style=\"box-sizing: border-box;border-width: 0px 4px 0px 2px;border-top-style: initial;border-right-style: solid;border-bottom-style: initial;border-left-style: solid;border-top-color: initial;border-right-color: transparent;border-bottom-color: initial;border-left-color: transparent;border-image: initial;vertical-align: middle;max-width: 100%;image-orientation: from-image;cursor: default\"/></span></p></li></ol><p cid=\"n38\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0.8em;margin-bottom: 0.8em;white-space: pre-wrap;position: relative\"><br/></p><ol start=\"2\" cid=\"n39\" mdtype=\"list\" style=\"box-sizing: border-box;margin-top: 0.8em;margin-bottom: 0.8em;padding-left: 30px;position: relative\" class=\" list-paddingleft-2\"><li><p cid=\"n41\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0px;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"plain\" style=\"box-sizing: border-box\">发现和.mis版本的目录一模一样，为什么node能使用因为配置了环境变量，.mis无非是自动化的帮我们配置了环境变量，而.zip版本只需要再次配置node的环境就可以使用</span></p></li></ol><p cid=\"n42\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0.8em;margin-bottom: 0.8em;white-space: pre-wrap;position: relative\"><br/></p><h2 cid=\"n43\" mdtype=\"heading\" class=\"md-end-block md-heading\" style=\"box-sizing: border-box;break-after: avoid-page;break-inside: avoid;orphans: 4;font-size: 1.75em;margin-top: 1rem;margin-bottom: 1rem;position: relative;line-height: 1.225;cursor: text;padding-bottom: 0.3em;border-bottom: 1px solid rgb(238, 238, 238);white-space: pre-wrap\"><span md-inline=\"plain\" style=\"box-sizing: border-box\">nvm安装node.js</span></h2><p cid=\"n44\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0.8em;margin-bottom: 0.8em;white-space: pre-wrap;position: relative\"><br/></p><blockquote cid=\"n45\" mdtype=\"blockquote\" style=\"box-sizing: border-box;margin: 0.8em 0px;border-left: 4px solid rgb(230, 126, 34);padding: 0px 15px;color: rgb(119, 119, 119);background: rgb(245, 245, 245)\"><p cid=\"n46\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0px;margin-bottom: 0px;white-space: pre-wrap;position: relative\"><span md-inline=\"strong\" class=\"md-pair-s \" style=\"box-sizing: border-box\"><strong style=\"box-sizing: border-box\">可以看出多个node版本使用上面两种方式只能共存一个，而如何我们想使用多个版本的node该如何办到呢？这时候需要借助nvm</strong></span></p></blockquote><p cid=\"n47\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0.8em;margin-bottom: 0.8em;white-space: pre-wrap;position: relative\"><br/></p><ol start=\"\" cid=\"n48\" mdtype=\"list\" style=\"box-sizing: border-box;margin-top: 0.8em;margin-bottom: 0.8em;padding-left: 30px;position: relative\" class=\" list-paddingleft-2\"><li><p cid=\"n50\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0px;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"plain\" style=\"box-sizing: border-box\">github上搜索nvm选择</span><span md-inline=\"link\" class=\"md-meta-i-c  md-link\" style=\"box-sizing: border-box\"><a spellcheck=\"false\" href=\"https://github.com/coreybutler/nvm-windows\" style=\"box-sizing: border-box;cursor: pointer;color: rgb(65, 131, 196);-webkit-user-drag: none\"><span md-inline=\"plain\" style=\"box-sizing: border-box\">coreybutler/</span><span md-inline=\"em\" class=\"md-pair-s \" style=\"box-sizing: border-box\"><em style=\"box-sizing: border-box\"><span md-inline=\"plain\" style=\"box-sizing: border-box\">nvm</span></em></span><span md-inline=\"plain\" style=\"box-sizing: border-box\">-windows</span></a></span><span md-inline=\"image\" data-src=\"https://blog-pic1.oss-cn-beijing.aliyuncs.com/blog/images/image-20200828115429481.png\" class=\"md-image md-img-loaded\" style=\"box-sizing: border-box;min-width: 10px;min-height: 10px;position: relative;font-family: monospace;vertical-align: top\"><img referrerpolicy=\"no-referrer\" alt=\"image-20200828115429481\" src=\"http://139.224.82.98:80/static/upload/images/article/content/20200828/1598601586281084161.png\" data-local-refresh=\"true\" style=\"box-sizing: border-box;border-width: 0px 4px 0px 2px;border-top-style: initial;border-right-style: solid;border-bottom-style: initial;border-left-style: solid;border-top-color: initial;border-right-color: transparent;border-bottom-color: initial;border-left-color: transparent;border-image: initial;vertical-align: middle;max-width: 100%;image-orientation: from-image;cursor: default\"/></span></p></li><li><p cid=\"n52\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0px;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"image\" data-src=\"https://blog-pic1.oss-cn-beijing.aliyuncs.com/blog/images/image-20200828115528996.png\" class=\"md-image md-img-loaded\" style=\"box-sizing: border-box;min-width: 10px;min-height: 10px;position: relative;font-family: monospace;vertical-align: top;display: inline-block;width: 934px\"><img referrerpolicy=\"no-referrer\" alt=\"image-20200828115528996\" src=\"http://139.224.82.98:80/static/upload/images/article/content/20200828/1598601586381095526.png\" data-local-refresh=\"true\" style=\"box-sizing: border-box;border-width: 0px 4px 0px 2px;border-top-style: initial;border-right-style: solid;border-bottom-style: initial;border-left-style: solid;border-top-color: initial;border-right-color: transparent;border-bottom-color: initial;border-left-color: transparent;border-image: initial;vertical-align: middle;max-width: 100%;image-orientation: from-image;cursor: default;display: block\"/></span></p></li><li><p cid=\"n54\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0px;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"image\" data-src=\"https://blog-pic1.oss-cn-beijing.aliyuncs.com/blog/images/image-20200828130533628.png\" class=\"md-image md-img-loaded\" style=\"box-sizing: border-box;min-width: 10px;min-height: 10px;position: relative;font-family: monospace;vertical-align: top;display: inline-block;width: 934px\"><img referrerpolicy=\"no-referrer\" alt=\"image-20200828130533628\" src=\"http://139.224.82.98:80/static/upload/images/article/content/20200828/1598601586447065071.png\" data-local-refresh=\"true\" style=\"box-sizing: border-box;border-width: 0px 4px 0px 2px;border-top-style: initial;border-right-style: solid;border-bottom-style: initial;border-left-style: solid;border-top-color: initial;border-right-color: transparent;border-bottom-color: initial;border-left-color: transparent;border-image: initial;vertical-align: middle;max-width: 100%;image-orientation: from-image;cursor: default;display: block\"/></span></p></li><li><p cid=\"n56\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0px;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"plain\" style=\"box-sizing: border-box\">为了方便管理</span></p><p cid=\"n106\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0.5rem;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><br/></p></li><ol start=\"\" cid=\"n75\" mdtype=\"list\" style=\"list-style-type: lower-alpha;\" class=\" list-paddingleft-2\"><li><p cid=\"n77\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0px;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"plain\" style=\"box-sizing: border-box\">MVN_HOME 表示settings.txt中的root</span></p></li><li><p cid=\"n79\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0px;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"plain\" style=\"box-sizing: border-box\">MVN_SYMLINK表示settings.txt中的path</span></p></li><li class=\"md- md-focus-container\" cid=\"n80\" mdtype=\"list_item\" style=\"\"><p cid=\"n81\" mdtype=\"paragraph\" class=\"md-end-block md-p md-focus\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0px;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"plain\" style=\"box-sizing: border-box\">然后把他们分别配置到Path中</span><span md-inline=\"image\" data-src=\"https://blog-pic1.oss-cn-beijing.aliyuncs.com/blog/images/image-20200828135842396.png\" class=\"md-image md-img-loaded md-expand\" style=\"box-sizing: border-box;min-width: 10px;min-height: 10px;position: relative;font-family: monospace;vertical-align: top\"><img referrerpolicy=\"no-referrer\" alt=\"image-20200828135842396\" src=\"http://139.224.82.98:80/static/upload/images/article/content/20200828/1598601586489066186.png\" data-local-refresh=\"true\" style=\"box-sizing: border-box;border-width: 0px 4px 0px 2px;border-top-style: initial;border-right-style: solid;border-bottom-style: initial;border-left-style: solid;border-top-color: initial;border-right-color: transparent;border-bottom-color: initial;border-left-color: transparent;border-image: initial;vertical-align: middle;max-width: 100%;image-orientation: from-image;cursor: default;display: inline-block\"/></span></p></li><li><p cid=\"n83\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0px;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"plain\" style=\"box-sizing: border-box\">像这种环境变量的配置无非是在任何地方都能访问到该目录下的二进制程序</span></p></li><li><p cid=\"n59\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0px;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"plain\" style=\"box-sizing: border-box\">创建</span><span md-inline=\"strong\" class=\"md-pair-s \" style=\"box-sizing: border-box\"><strong style=\"box-sizing: border-box\">盘符:/xxx/dev/nvm</strong></span><span md-inline=\"plain\" style=\"box-sizing: border-box\">,</span><span md-inline=\"strong\" class=\"md-pair-s \" style=\"box-sizing: border-box\"><strong style=\"box-sizing: border-box\">盘符:/xxx/dev/nodejs</strong></span></p><p cid=\"n60\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0.5rem;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"image\" data-src=\"https://blog-pic1.oss-cn-beijing.aliyuncs.com/blog/images/image-20200828134757353.png\" class=\"md-image md-img-loaded\" style=\"box-sizing: border-box;min-width: 10px;min-height: 10px;position: relative;font-family: monospace;vertical-align: top;display: inline-block;width: 904px\"><img referrerpolicy=\"no-referrer\" alt=\"image-20200828134757353\" src=\"http://139.224.82.98:80/static/upload/images/article/content/20200828/1598601586525033060.png\" data-local-refresh=\"true\" style=\"box-sizing: border-box;border-width: 0px 4px 0px 2px;border-top-style: initial;border-right-style: solid;border-bottom-style: initial;border-left-style: solid;border-top-color: initial;border-right-color: transparent;border-bottom-color: initial;border-left-color: transparent;border-image: initial;vertical-align: middle;max-width: 100%;image-orientation: from-image;cursor: default;display: block\"/></span></p></li><li><p cid=\"n62\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0px;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"plain\" style=\"box-sizing: border-box\">将解压好的文件放入nvm文件夹中</span><span md-inline=\"image\" data-src=\"https://blog-pic1.oss-cn-beijing.aliyuncs.com/blog/images/image-20200828134838057.png\" class=\"md-image md-img-loaded\" style=\"box-sizing: border-box;min-width: 10px;min-height: 10px;position: relative;font-family: monospace;vertical-align: top\"><img referrerpolicy=\"no-referrer\" alt=\"image-20200828134838057\" src=\"http://139.224.82.98:80/static/upload/images/article/content/20200828/1598601586563050479.png\" data-local-refresh=\"true\" style=\"box-sizing: border-box;border-width: 0px 4px 0px 2px;border-top-style: initial;border-right-style: solid;border-bottom-style: initial;border-left-style: solid;border-top-color: initial;border-right-color: transparent;border-bottom-color: initial;border-left-color: transparent;border-image: initial;vertical-align: middle;max-width: 100%;image-orientation: from-image;cursor: default\"/></span></p></li><li><p cid=\"n64\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0px;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"strong\" class=\"md-pair-s \" style=\"box-sizing: border-box\"><strong style=\"box-sizing: border-box\">以管理员身份运行</strong></span><span md-inline=\"plain\" style=\"box-sizing: border-box\"> install.cmd文件, 弹出命令框一顿回车</span></p></li><li><p cid=\"n66\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0px;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"plain\" style=\"box-sizing: border-box\">系统会在c盘下创建一个settings.txt的文件, 复制如下文件到settings.txt中，然后拷贝至</span><span md-inline=\"strong\" class=\"md-pair-s \" style=\"box-sizing: border-box\"><strong style=\"box-sizing: border-box\">盘符:/xxx/dev/nvm</strong></span></p><pre spellcheck=\"false\" class=\"md-fences md-end-block md-fences-with-lineno ty-contain-cm modeLoaded\" cid=\"n67\" mdtype=\"fences\" style=\"box-sizing: border-box;overflow: visible;font-family: var(--monospace);font-size: 0.9em;break-inside: avoid;white-space: normal;background-image: inherit;background-position: inherit;background-size: inherit;background-repeat: inherit;background-attachment: inherit;background-origin: inherit;background-clip: inherit;border: 1px solid rgb(231, 234, 237);border-radius: 3px;padding: 8px 4px 6px 0px;margin-bottom: 15px;margin-top: 15px;width: inherit;position: relative !important\">&nbsp;<span role=\"presentation\" style=\"box-sizing: border-box;padding-right: 0.1px\">root: &nbsp;D:<span style=\"box-sizing: border-box;color: rgb(17, 119, 0)\">\\study\\dev\\nvm</span> </span><br/>&nbsp;<span role=\"presentation\" style=\"box-sizing: border-box;padding-right: 0.1px\">path: &nbsp;D:<span style=\"box-sizing: border-box;color: rgb(17, 119, 0)\">\\study\\dev\\nodejs</span></span><br/>&nbsp;<span role=\"presentation\" style=\"box-sizing: border-box;padding-right: 0.1px\">arch: 64 </span><br/>&nbsp;<span role=\"presentation\" style=\"box-sizing: border-box;padding-right: 0.1px\">proxy: none</span><br/>&nbsp;<span role=\"presentation\" style=\"box-sizing: border-box;padding-right: 0.1px\">node_mirror: http://npm.taobao.org/mirrors/node/</span><br/>&nbsp;<span role=\"presentation\" style=\"box-sizing: border-box;padding-right: 0.1px\">npm_mirror: https://npm.taobao.org/mirrors/npm/</span></pre><p cid=\"n68\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0.5rem;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"plain\" style=\"box-sizing: border-box\">root: </span> <span md-inline=\"plain\" style=\"box-sizing: border-box\">表示NVM_HOME路径</span></p><p cid=\"n69\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0.5rem;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"plain\" style=\"box-sizing: border-box\">path: </span> <span md-inline=\"plain\" style=\"box-sizing: border-box\">表示创建node快捷方式的文件目录，待会会说到</span></p><p cid=\"n70\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0.5rem;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"plain\" style=\"box-sizing: border-box\">arch:</span> <span md-inline=\"plain\" style=\"box-sizing: border-box\">下载多少位的node环境</span></p><p cid=\"n71\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0.5rem;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"plain\" style=\"box-sizing: border-box\">proxy:</span> <span md-inline=\"plain\" style=\"box-sizing: border-box\">代理</span></p><p cid=\"n72\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0.5rem;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"plain\" style=\"box-sizing: border-box\">node_mirror:</span> <span md-inline=\"plain\" style=\"box-sizing: border-box\">node镜像，加速下载node速度，默认在国外</span> <span md-inline=\"plain\" style=\"box-sizing: border-box\">npm_mirror: </span> <span md-inline=\"plain\" style=\"box-sizing: border-box\">npm镜像</span></p></li><li><p cid=\"n74\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0px;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"plain\" style=\"box-sizing: border-box\">配置环境变量</span></p><p cid=\"n84\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0.5rem;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"image\" data-src=\"https://blog-pic1.oss-cn-beijing.aliyuncs.com/blog/images/image-20200828140030642.png\" class=\"md-image md-img-loaded\" style=\"box-sizing: border-box;min-width: 10px;min-height: 10px;position: relative;font-family: monospace;vertical-align: top;display: inline-block;width: 904px\"><img referrerpolicy=\"no-referrer\" alt=\"image-20200828140030642\" src=\"http://139.224.82.98:80/static/upload/images/article/content/20200828/1598601586603032395.png\" data-local-refresh=\"true\" style=\"box-sizing: border-box;border-width: 0px 4px 0px 2px;border-top-style: initial;border-right-style: solid;border-bottom-style: initial;border-left-style: solid;border-top-color: initial;border-right-color: transparent;border-bottom-color: initial;border-left-color: transparent;border-image: initial;vertical-align: middle;max-width: 100%;image-orientation: from-image;cursor: default;display: block\"/></span></p></li><li><p cid=\"n86\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0px;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"plain\" style=\"box-sizing: border-box\">测试是否安装成功</span></p><pre spellcheck=\"false\" class=\"md-fences md-end-block md-fences-with-lineno ty-contain-cm modeLoaded\" cid=\"n87\" mdtype=\"fences\" style=\"box-sizing: border-box;overflow: visible;font-family: var(--monospace);font-size: 0.9em;break-inside: avoid;white-space: normal;background-image: inherit;background-position: inherit;background-size: inherit;background-repeat: inherit;background-attachment: inherit;background-origin: inherit;background-clip: inherit;border: 1px solid rgb(231, 234, 237);border-radius: 3px;padding: 8px 4px 6px 0px;margin-bottom: 15px;margin-top: 15px;width: inherit;position: relative !important\">&nbsp;mvn&nbsp;v</pre><p cid=\"n88\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0.5rem;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><br/></p><p cid=\"n89\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0.5rem;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"image\" data-src=\"https://blog-pic1.oss-cn-beijing.aliyuncs.com/blog/images/image-20200828140141654.png\" class=\"md-image md-img-loaded\" style=\"box-sizing: border-box;min-width: 10px;min-height: 10px;position: relative;font-family: monospace;vertical-align: top;display: inline-block;width: 904px\"><img referrerpolicy=\"no-referrer\" alt=\"image-20200828140141654\" src=\"http://139.224.82.98:80/static/upload/images/article/content/20200828/1598601586642052406.png\" data-local-refresh=\"true\" style=\"box-sizing: border-box;border-width: 0px 4px 0px 2px;border-top-style: initial;border-right-style: solid;border-bottom-style: initial;border-left-style: solid;border-top-color: initial;border-right-color: transparent;border-bottom-color: initial;border-left-color: transparent;border-image: initial;vertical-align: middle;max-width: 100%;image-orientation: from-image;cursor: default;display: block\"/></span></p></li><li><p cid=\"n91\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0px;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"plain\" style=\"box-sizing: border-box\">下载node</span></p><pre spellcheck=\"false\" class=\"md-fences md-end-block md-fences-with-lineno ty-contain-cm modeLoaded\" cid=\"n92\" mdtype=\"fences\" style=\"box-sizing: border-box;overflow: visible;font-family: var(--monospace);font-size: 0.9em;break-inside: avoid;white-space: normal;background-image: inherit;background-position: inherit;background-size: inherit;background-repeat: inherit;background-attachment: inherit;background-origin: inherit;background-clip: inherit;border: 1px solid rgb(231, 234, 237);border-radius: 3px;padding: 8px 4px 6px 0px;margin-bottom: 15px;margin-top: 15px;width: inherit;position: relative !important\">&nbsp;nvm&nbsp;install&nbsp;latest&nbsp;#&nbsp;下最新版本node</pre><p cid=\"n93\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0.5rem;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"image\" data-src=\"https://blog-pic1.oss-cn-beijing.aliyuncs.com/blog/images/image-20200828140541274.png\" class=\"md-image md-img-loaded\" style=\"box-sizing: border-box;min-width: 10px;min-height: 10px;position: relative;font-family: monospace;vertical-align: top;display: inline-block;width: 904px\"><img referrerpolicy=\"no-referrer\" alt=\"image-20200828140541274\" src=\"http://139.224.82.98:80/static/upload/images/article/content/20200828/1598601586682087700.png\" data-local-refresh=\"true\" style=\"box-sizing: border-box;border-width: 0px 4px 0px 2px;border-top-style: initial;border-right-style: solid;border-bottom-style: initial;border-left-style: solid;border-top-color: initial;border-right-color: transparent;border-bottom-color: initial;border-left-color: transparent;border-image: initial;vertical-align: middle;max-width: 100%;image-orientation: from-image;cursor: default;display: block\"/></span></p><p cid=\"n94\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0.5rem;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"plain\" style=\"box-sizing: border-box\">下载成功可以观察NVM_HOME路径下有当前版本的node，而nodejs目录下什么也没有</span><span md-inline=\"image\" data-src=\"https://blog-pic1.oss-cn-beijing.aliyuncs.com/blog/images/image-20200828140628534.png\" class=\"md-image md-img-loaded\" style=\"box-sizing: border-box;min-width: 10px;min-height: 10px;position: relative;font-family: monospace;vertical-align: top\"><img referrerpolicy=\"no-referrer\" alt=\"image-20200828140628534\" src=\"http://139.224.82.98:80/static/upload/images/article/content/20200828/1598601586717075117.png\" data-local-refresh=\"true\" style=\"box-sizing: border-box;border-width: 0px 4px 0px 2px;border-top-style: initial;border-right-style: solid;border-bottom-style: initial;border-left-style: solid;border-top-color: initial;border-right-color: transparent;border-bottom-color: initial;border-left-color: transparent;border-image: initial;vertical-align: middle;max-width: 100%;image-orientation: from-image;cursor: default\"/></span></p></li><li><p cid=\"n96\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0px;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"plain\" style=\"box-sizing: border-box\">使用node</span></p><pre spellcheck=\"false\" class=\"md-fences md-end-block md-fences-with-lineno ty-contain-cm modeLoaded\" cid=\"n97\" mdtype=\"fences\" style=\"box-sizing: border-box;overflow: visible;font-family: var(--monospace);font-size: 0.9em;break-inside: avoid;white-space: normal;background-image: inherit;background-position: inherit;background-size: inherit;background-repeat: inherit;background-attachment: inherit;background-origin: inherit;background-clip: inherit;border: 1px solid rgb(231, 234, 237);border-radius: 3px;padding: 8px 4px 6px 0px;margin-bottom: 15px;margin-top: 15px;width: inherit;position: relative !important\">&nbsp;<span role=\"presentation\" style=\"box-sizing: border-box;padding-right: 0.1px\">nvm <span style=\"box-sizing: border-box;color: rgb(51, 0, 170)\">ls</span> <span style=\"box-sizing: border-box;color: rgb(170, 85, 0)\"># 查看所有node版本</span></span><br/>&nbsp;<span role=\"presentation\" style=\"box-sizing: border-box;padding-right: 0.1px\">nvm use [版本号] <span style=\"box-sizing: border-box;color: rgb(170, 85, 0)\"># 使用node环境</span></span></pre><p cid=\"n98\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0.5rem;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"image\" data-src=\"https://blog-pic1.oss-cn-beijing.aliyuncs.com/blog/images/image-20200828140834526.png\" class=\"md-image md-img-loaded\" style=\"box-sizing: border-box;min-width: 10px;min-height: 10px;position: relative;font-family: monospace;vertical-align: top;display: inline-block;width: 904px\"><img referrerpolicy=\"no-referrer\" alt=\"image-20200828140834526\" src=\"http://139.224.82.98:80/static/upload/images/article/content/20200828/1598601586757021032.png\" data-local-refresh=\"true\" style=\"box-sizing: border-box;border-width: 0px 4px 0px 2px;border-top-style: initial;border-right-style: solid;border-bottom-style: initial;border-left-style: solid;border-top-color: initial;border-right-color: transparent;border-bottom-color: initial;border-left-color: transparent;border-image: initial;vertical-align: middle;max-width: 100%;image-orientation: from-image;cursor: default;display: block\"/></span></p><p cid=\"n99\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0.5rem;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"strong\" class=\"md-pair-s \" style=\"box-sizing: border-box\"><strong style=\"box-sizing: border-box\">查看nodejs目录，出现了对当前版本的快捷方式，也就是NVM_HOME/v[版本号]目录</strong></span><span md-inline=\"image\" data-src=\"https://blog-pic1.oss-cn-beijing.aliyuncs.com/blog/images/image-20200828141101985.png\" class=\"md-image md-img-loaded\" style=\"box-sizing: border-box;min-width: 10px;min-height: 10px;position: relative;font-family: monospace;vertical-align: top\"><img referrerpolicy=\"no-referrer\" alt=\"image-20200828141101985\" src=\"http://139.224.82.98:80/static/upload/images/article/content/20200828/1598601586791074653.png\" data-local-refresh=\"true\" style=\"box-sizing: border-box;border-width: 0px 4px 0px 2px;border-top-style: initial;border-right-style: solid;border-bottom-style: initial;border-left-style: solid;border-top-color: initial;border-right-color: transparent;border-bottom-color: initial;border-left-color: transparent;border-image: initial;vertical-align: middle;max-width: 100%;image-orientation: from-image;cursor: default\"/></span></p></li><li><p cid=\"n101\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0px;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"plain\" style=\"box-sizing: border-box\">mvn的常用命令</span></p><pre spellcheck=\"false\" class=\"md-fences md-end-block md-fences-with-lineno ty-contain-cm modeLoaded\" cid=\"n102\" mdtype=\"fences\" style=\"box-sizing: border-box;overflow: visible;font-family: var(--monospace);font-size: 0.9em;break-inside: avoid;white-space: normal;background-image: inherit;background-position: inherit;background-size: inherit;background-repeat: inherit;background-attachment: inherit;background-origin: inherit;background-clip: inherit;border: 1px solid rgb(231, 234, 237);border-radius: 3px;padding: 8px 4px 6px 0px;margin-bottom: 15px;margin-top: 15px;width: inherit;position: relative !important\">&nbsp;<span role=\"presentation\" style=\"box-sizing: border-box;padding-right: 0.1px\">mvn v <span style=\"box-sizing: border-box;color: rgb(170, 85, 0)\"># 查看mvn版本信息</span></span><br/>&nbsp;<span role=\"presentation\" style=\"box-sizing: border-box;padding-right: 0.1px\">mvn <span style=\"box-sizing: border-box;color: rgb(51, 0, 170)\">ls</span> <span style=\"box-sizing: border-box;color: rgb(170, 85, 0)\"># 查看所有版本的node</span></span><br/>&nbsp;<span role=\"presentation\" style=\"box-sizing: border-box;padding-right: 0.1px\">mvn install [版本号] <span style=\"box-sizing: border-box;color: rgb(170, 85, 0)\"># 安装node</span></span><br/>&nbsp;<span role=\"presentation\" style=\"box-sizing: border-box;padding-right: 0.1px\">mvn uninstall[版本号] <span style=\"box-sizing: border-box;color: rgb(170, 85, 0)\"># 移出node</span></span><br/>&nbsp;<span role=\"presentation\" style=\"box-sizing: border-box;padding-right: 0.1px\">mvn use [版本号] <span style=\"box-sizing: border-box;color: rgb(170, 85, 0)\"># 使用node，也就是会在path文件目录下创建node的快捷方式</span></span></pre></li><li><p cid=\"n104\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0px;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"strong\" class=\"md-pair-s \" style=\"box-sizing: border-box\"><strong style=\"box-sizing: border-box\">总结</strong></span></p><p cid=\"n105\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0.5rem;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"plain\" style=\"box-sizing: border-box\">mvn之所以能达到同时使用多个版本的node，其实就是配置固定的环境变量(NVM_SYMLINK)，下载多个node版本，当执行nvm use 命令时候，nvm就会在settings.txt中path路径下创建node的快捷方式，node的环境变量配置了，应用也在为什么还不能运行node呢？这也是比较常用的node安装方式，</span><span md-inline=\"strong\" class=\"md-pair-s \" style=\"box-sizing: border-box\"><strong style=\"box-sizing: border-box\">比较推荐</strong></span></p></li></ol><ol start=\"\" cid=\"n57\" mdtype=\"list\" style=\"list-style-type: lower-alpha;\" class=\" list-paddingleft-2\"></ol></ol><h2 cid=\"n108\" mdtype=\"heading\" class=\"md-end-block md-heading\" style=\"box-sizing: border-box;break-after: avoid-page;break-inside: avoid;orphans: 4;font-size: 1.75em;margin-top: 1rem;margin-bottom: 1rem;position: relative;line-height: 1.225;cursor: text;padding-bottom: 0.3em;border-bottom: 1px solid rgb(238, 238, 238);white-space: pre-wrap\"><span md-inline=\"plain\" style=\"box-sizing: border-box\">npm镜像配置</span></h2><p cid=\"n109\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0.8em;margin-bottom: 0.8em;white-space: pre-wrap;position: relative\"><br/></p><p cid=\"n110\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0.8em;margin-bottom: 0.8em;white-space: pre-wrap;position: relative\"><span md-inline=\"strong\" class=\"md-pair-s \" style=\"box-sizing: border-box\"><strong style=\"box-sizing: border-box\">通过nvm无须配置镜像，在settings.txt已经配置好了，这里属于原生配置，不过nvm也可以配置</strong></span></p><blockquote cid=\"n111\" mdtype=\"blockquote\" style=\"box-sizing: border-box;margin: 0.8em 0px;border-left: 4px solid rgb(230, 126, 34);padding: 0px 15px;color: rgb(119, 119, 119);background: rgb(245, 245, 245)\"><p cid=\"n112\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0px;margin-bottom: 0px;white-space: pre-wrap;position: relative\"><span md-inline=\"plain\" style=\"box-sizing: border-box\">通过命令行修改配置达到修改镜像的效果</span></p></blockquote><pre spellcheck=\"false\" class=\"md-fences md-end-block md-fences-with-lineno ty-contain-cm modeLoaded\" cid=\"n113\" mdtype=\"fences\" style=\"box-sizing: border-box;overflow: visible;font-family: var(--monospace);font-size: 0.9em;break-inside: avoid;white-space: normal;background-image: inherit;background-position: inherit;background-size: inherit;background-repeat: inherit;background-attachment: inherit;background-origin: inherit;background-clip: inherit;border: 1px solid rgb(231, 234, 237);border-radius: 3px;padding: 8px 4px 6px 0px;margin-bottom: 15px;margin-top: 15px;width: inherit;position: relative !important\">&nbsp;<span role=\"presentation\" style=\"box-sizing: border-box;padding-right: 0.1px\"><span style=\"box-sizing: border-box;color: rgb(51, 0, 170)\">npm</span> config <span style=\"box-sizing: border-box;color: rgb(119, 0, 136)\">set</span> registry http://registry.npm.taobao.org <span style=\"box-sizing: border-box;color: rgb(170, 85, 0)\"># 切换淘宝镜像 nvm已经配置过淘宝镜像</span></span><br/>&nbsp;<span role=\"presentation\" style=\"box-sizing: border-box;padding-right: 0.1px\"><span style=\"box-sizing: border-box;color: rgb(51, 0, 170)\">npm</span> <span style=\"box-sizing: border-box;color: rgb(51, 0, 170)\">get</span> registry <span style=\"box-sizing: border-box;color: rgb(170, 85, 0)\"># 获取镜像地址</span></span><br/>&nbsp;<span role=\"presentation\" style=\"box-sizing: border-box;padding-right: 0.1px\"><span style=\"box-sizing: border-box;color: rgb(51, 0, 170)\">npm</span> config <span style=\"box-sizing: border-box;color: rgb(119, 0, 136)\">set</span> registry http://www.npmjs.org <span style=\"box-sizing: border-box;color: rgb(170, 85, 0)\"># 切换官方镜像</span></span></pre><p cid=\"n114\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0.8em;margin-bottom: 0.8em;white-space: pre-wrap;position: relative\"><br/></p><blockquote cid=\"n115\" mdtype=\"blockquote\" style=\"box-sizing: border-box;margin: 0.8em 0px;border-left: 4px solid rgb(230, 126, 34);padding: 0px 15px;color: rgb(119, 119, 119);background: rgb(245, 245, 245)\"><p cid=\"n116\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0px;margin-bottom: 0px;white-space: pre-wrap;position: relative\"><span md-inline=\"plain\" style=\"box-sizing: border-box\">通过下载nrm来配置镜像地址</span></p></blockquote><ol start=\"\" cid=\"n117\" mdtype=\"list\" style=\"box-sizing: border-box;margin-top: 0.8em;padding-left: 30px;position: relative\" class=\" list-paddingleft-2\"><li><p cid=\"n119\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0px;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"strong\" class=\"md-pair-s \" style=\"box-sizing: border-box\"><strong style=\"box-sizing: border-box\">下载nrm</strong></span></p><pre spellcheck=\"false\" class=\"md-fences md-end-block md-fences-with-lineno ty-contain-cm modeLoaded\" cid=\"n120\" mdtype=\"fences\" style=\"box-sizing: border-box;overflow: visible;font-family: var(--monospace);font-size: 0.9em;break-inside: avoid;white-space: normal;background-image: inherit;background-position: inherit;background-size: inherit;background-repeat: inherit;background-attachment: inherit;background-origin: inherit;background-clip: inherit;border: 1px solid rgb(231, 234, 237);border-radius: 3px;padding: 8px 4px 6px 0px;margin-bottom: 15px;margin-top: 15px;width: inherit;position: relative !important\">&nbsp;npm&nbsp;install&nbsp;-g&nbsp;nrm&nbsp;#&nbsp;全局下载nrm&nbsp;npm全局下载路径存放在node安装目录下的node_moudles中</pre></li><li><p cid=\"n122\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0px;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"strong\" class=\"md-pair-s \" style=\"box-sizing: border-box\"><strong style=\"box-sizing: border-box\">查看镜像源</strong></span></p><pre spellcheck=\"false\" class=\"md-fences md-end-block md-fences-with-lineno ty-contain-cm modeLoaded\" cid=\"n123\" mdtype=\"fences\" style=\"box-sizing: border-box;overflow: visible;font-family: var(--monospace);font-size: 0.9em;break-inside: avoid;white-space: normal;background-image: inherit;background-position: inherit;background-size: inherit;background-repeat: inherit;background-attachment: inherit;background-origin: inherit;background-clip: inherit;border: 1px solid rgb(231, 234, 237);border-radius: 3px;padding: 8px 4px 6px 0px;margin-bottom: 15px;margin-top: 15px;width: inherit;position: relative !important\">&nbsp;nrm&nbsp;ls</pre><p cid=\"n124\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0.5rem;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative\"><span md-inline=\"image\" data-src=\"https://blog-pic1.oss-cn-beijing.aliyuncs.com/blog/images/image-20200828144516618.png\" class=\"md-image md-img-loaded\" style=\"box-sizing: border-box;min-width: 10px;min-height: 10px;position: relative;font-family: monospace;vertical-align: top;display: inline-block;width: 934px\"><img referrerpolicy=\"no-referrer\" alt=\"image-20200828144516618\" src=\"http://139.224.82.98:80/static/upload/images/article/content/20200828/1598601586830062401.png\" data-local-refresh=\"true\" style=\"box-sizing: border-box;border-width: 0px 4px 0px 2px;border-top-style: initial;border-right-style: solid;border-bottom-style: initial;border-left-style: solid;border-top-color: initial;border-right-color: transparent;border-bottom-color: initial;border-left-color: transparent;border-image: initial;vertical-align: middle;max-width: 100%;image-orientation: from-image;cursor: default;display: block\"/></span></p></li><li><p cid=\"n126\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0px;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative;color: rgb(51, 51, 51);font-family: &#39;Open Sans&#39;, &#39;Clear Sans&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;background-color: rgb(255, 255, 255)\"><span md-inline=\"strong\" class=\"md-pair-s \" style=\"box-sizing: border-box\"><strong style=\"box-sizing: border-box\">切换镜像源</strong></span></p><pre spellcheck=\"false\" class=\"md-fences mock-cm md-end-block md-fences-with-lineno\" cid=\"n127\" mdtype=\"fences\" style=\"box-sizing: border-box;overflow: visible;font-family: var(--monospace);font-size: 0.9em;break-inside: avoid;white-space: pre-wrap;background-image: inherit;background-position: inherit;background-size: inherit;background-repeat: inherit;background-attachment: inherit;background-origin: inherit;background-clip: inherit;border: 1px solid rgb(231, 234, 237);border-radius: 3px;padding: 8px 4px 6px 8px;margin-bottom: 15px;margin-top: 15px;width: inherit;color: rgb(51, 51, 51);position: relative !important\">nrm&nbsp;use&nbsp;[镜像名]</pre><p cid=\"n128\" mdtype=\"paragraph\" class=\"md-end-block md-p\" style=\"box-sizing: border-box;line-height: inherit;orphans: 4;margin-top: 0.5rem;margin-bottom: 0.5rem;white-space: pre-wrap;position: relative;color: rgb(51, 51, 51);font-family: &#39;Open Sans&#39;, &#39;Clear Sans&#39;, &#39;Helvetica Neue&#39;, Helvetica, Arial, sans-serif;background-color: rgb(255, 255, 255)\"><span md-inline=\"image\" data-src=\"https://blog-pic1.oss-cn-beijing.aliyuncs.com/blog/images/image-20200828144631528.png\" class=\"md-image md-img-loaded\" style=\"box-sizing: border-box;min-width: 10px;min-height: 10px;position: relative;font-family: monospace;vertical-align: top;display: inline-block;width: 934px\"><img referrerpolicy=\"no-referrer\" alt=\"image-20200828144631528\" src=\"http://139.224.82.98:80/static/upload/images/article/content/20200828/1598601586864086336.png\" data-local-refresh=\"true\" style=\"box-sizing: border-box;border-width: 0px 4px 0px 2px;border-top-style: initial;border-right-style: solid;border-bottom-style: initial;border-left-style: solid;border-top-color: initial;border-right-color: transparent;border-bottom-color: initial;border-left-color: transparent;border-image: initial;vertical-align: middle;max-width: 100%;image-orientation: from-image;cursor: default;display: block\"/></span></p></li><li><p><span md-inline=\"image\" data-src=\"https://blog-pic1.oss-cn-beijing.aliyuncs.com/blog/images/image-20200828144631528.png\" class=\"md-image md-img-loaded\" style=\"box-sizing: border-box;min-width: 10px;min-height: 10px;position: relative;font-family: monospace;vertical-align: top;display: inline-block;width: 934px\"><br/></span></p></li></ol><p><br/></p>', 'http://localhost:8080/static/upload/images/article/cover/42c17073845144c5b1836e64689254e9.jfif', '2020-08-28 08:00:14', '2020-08-28 08:00:14', '1', '2');

-- ----------------------------
-- Table structure for banner
-- ----------------------------
DROP TABLE IF EXISTS `banner`;
CREATE TABLE `banner` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `picture` varchar(100) DEFAULT NULL,
  `url` varchar(100) DEFAULT NULL,
  `sort` int(10) DEFAULT NULL,
  `name` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of banner
-- ----------------------------
INSERT INTO `banner` VALUES ('4', 'http://localhost:8080/static/upload/images/banner/5b39564cda6b4a908cc311d01a0cf8d0.jpg', 'http://localhost:8080/articleDesc/page?articleId=15', '8', '最佳spring文章');
INSERT INTO `banner` VALUES ('5', 'http://localhost:8080/static/upload/images/banner/6178d921ff804ebc97ee80c7c3926781.jpg', 'http://localhost:8080/articleDesc/page?articleId=16', '1', '最佳mybaits文章');
INSERT INTO `banner` VALUES ('6', 'http://localhost:8080/static/upload/images/banner/48db85f3feb14ec5b574648a5e379acd.jpg', 'http://localhost:8080/articleDesc/page?articleId=7', '7', '最佳SpringMVC教程');

-- ----------------------------
-- Table structure for category
-- ----------------------------
DROP TABLE IF EXISTS `category`;
CREATE TABLE `category` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` varchar(50) DEFAULT NULL,
  `sort` int(10) DEFAULT NULL,
  `parent_id` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `parent_id` (`parent_id`),
  CONSTRAINT `category_ibfk_1` FOREIGN KEY (`parent_id`) REFERENCES `category` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=19 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of category
-- ----------------------------
INSERT INTO `category` VALUES ('1', 'Java', '3', null);
INSERT INTO `category` VALUES ('2', 'Web', '1', null);
INSERT INTO `category` VALUES ('3', 'Python', '3', null);
INSERT INTO `category` VALUES ('9', 'SpringMVC', '1', '1');
INSERT INTO `category` VALUES ('13', 'spring', '6', '1');
INSERT INTO `category` VALUES ('14', 'mybatis', '4', '1');
INSERT INTO `category` VALUES ('15', 'shiro', '4', '1');
INSERT INTO `category` VALUES ('16', '爬虫', '4', '3');
INSERT INTO `category` VALUES ('17', 'Vue', '4', '2');
INSERT INTO `category` VALUES ('18', 'Webpack', '4', '2');

-- ----------------------------
-- Table structure for keywords
-- ----------------------------
DROP TABLE IF EXISTS `keywords`;
CREATE TABLE `keywords` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` varchar(20) DEFAULT NULL,
  `sort` int(10) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of keywords
-- ----------------------------
INSERT INTO `keywords` VALUES ('1', 'Java', '3');
INSERT INTO `keywords` VALUES ('2', 'Web', '2');
INSERT INTO `keywords` VALUES ('6', 'Python', '4');
INSERT INTO `keywords` VALUES ('7', '人工智能', '8');
INSERT INTO `keywords` VALUES ('8', '区块链', '8');
INSERT INTO `keywords` VALUES ('9', '大数据', '8');
INSERT INTO `keywords` VALUES ('10', 'go语言', '7');

-- ----------------------------
-- Table structure for link
-- ----------------------------
DROP TABLE IF EXISTS `link`;
CREATE TABLE `link` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `url` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `sort` int(10) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of link
-- ----------------------------
INSERT INTO `link` VALUES ('3', 'GitHub', 'https://github.com/', '8');
INSERT INTO `link` VALUES ('4', 'CSDN', 'https://www.csdn.net/', '7');
INSERT INTO `link` VALUES ('5', '码云', 'https://gitee.com/', '6');
INSERT INTO `link` VALUES ('6', '阿里云', 'https://www.aliyun.com/?utm_content=se_1000301881', '4');
INSERT INTO `link` VALUES ('7', '博客园', 'https://www.cnblogs.com/', '7');
INSERT INTO `link` VALUES ('8', '简书', 'https://www.jianshu.com/', '7');

-- ----------------------------
-- Table structure for menu
-- ----------------------------
DROP TABLE IF EXISTS `menu`;
CREATE TABLE `menu` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `text` varchar(50) DEFAULT NULL,
  `url` varchar(100) DEFAULT NULL,
  `parent_id` bigint(20) DEFAULT NULL,
  `permission_id` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `parent_id` (`parent_id`),
  KEY `permission_id` (`permission_id`),
  CONSTRAINT `menu_ibfk_1` FOREIGN KEY (`parent_id`) REFERENCES `menu` (`id`),
  CONSTRAINT `menu_ibfk_2` FOREIGN KEY (`permission_id`) REFERENCES `permission` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=21 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of menu
-- ----------------------------
INSERT INTO `menu` VALUES ('1', '授权管理', null, null, '1');
INSERT INTO `menu` VALUES ('2', '博客管理', null, null, '40');
INSERT INTO `menu` VALUES ('3', '首页管理', null, null, '68');
INSERT INTO `menu` VALUES ('7', '用户管理', 'user', '1', '2');
INSERT INTO `menu` VALUES ('8', '角色管理', 'role', '1', '69');
INSERT INTO `menu` VALUES ('9', '权限管理', 'permission', '1', '32');
INSERT INTO `menu` VALUES ('10', '菜单管理', 'menu', '1', '36');
INSERT INTO `menu` VALUES ('11', '文章管理', 'article', '2', '41');
INSERT INTO `menu` VALUES ('12', '分类管理', 'category', '2', '45');
INSERT INTO `menu` VALUES ('13', '评论管理', 'review', '2', '49');
INSERT INTO `menu` VALUES ('14', '轮播图管理', 'banner', '3', '52');
INSERT INTO `menu` VALUES ('15', '公告管理', 'announcement', '3', '56');
INSERT INTO `menu` VALUES ('16', '关键字管理', 'keywords', '3', '60');
INSERT INTO `menu` VALUES ('17', '链接管理', 'link', '3', '64');

-- ----------------------------
-- Table structure for permission
-- ----------------------------
DROP TABLE IF EXISTS `permission`;
CREATE TABLE `permission` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` varchar(50) DEFAULT NULL,
  `resource` varchar(50) DEFAULT NULL,
  `parent_id` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=76 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of permission
-- ----------------------------
INSERT INTO `permission` VALUES ('1', '授权管理', 'authorize:index', null);
INSERT INTO `permission` VALUES ('2', '用户管理', 'user:index', '1');
INSERT INTO `permission` VALUES ('31', '用户授权', 'user:authorize', '2');
INSERT INTO `permission` VALUES ('32', '权限管理', 'permission:index', '1');
INSERT INTO `permission` VALUES ('33', '新增权限', 'permission:save', '32');
INSERT INTO `permission` VALUES ('34', '编辑权限', 'permission:edit', '32');
INSERT INTO `permission` VALUES ('35', '删除权限', 'permission:delete', '32');
INSERT INTO `permission` VALUES ('36', '菜单管理', 'menu:index', '1');
INSERT INTO `permission` VALUES ('37', '新增菜单', 'menu:save', '36');
INSERT INTO `permission` VALUES ('38', '编辑菜单', 'menu:edit', '36');
INSERT INTO `permission` VALUES ('39', '删除菜单', 'menu:delete', '36');
INSERT INTO `permission` VALUES ('40', '博客管理', 'blog:index', null);
INSERT INTO `permission` VALUES ('41', '文章管理', 'article:index', '40');
INSERT INTO `permission` VALUES ('42', '新增文章', 'article:save', '41');
INSERT INTO `permission` VALUES ('43', '修改文章', 'article:edit', '41');
INSERT INTO `permission` VALUES ('44', '删除文章', 'article:delete', '41');
INSERT INTO `permission` VALUES ('45', '分类管理', 'category:index', '40');
INSERT INTO `permission` VALUES ('46', '新增分类', 'category:save', '45');
INSERT INTO `permission` VALUES ('47', '修改分类', 'category:edit', '45');
INSERT INTO `permission` VALUES ('48', '删除分类', 'category:delete', '45');
INSERT INTO `permission` VALUES ('49', '评论管理', 'review:index', '40');
INSERT INTO `permission` VALUES ('50', '提交评论', 'review:submit', '49');
INSERT INTO `permission` VALUES ('51', '撤回评论', 'review:rollback', '49');
INSERT INTO `permission` VALUES ('52', '轮播图管理', 'banner:index', '68');
INSERT INTO `permission` VALUES ('53', '新增轮播图', 'banner:save', '52');
INSERT INTO `permission` VALUES ('54', '修改轮播图', 'banner:edit', '52');
INSERT INTO `permission` VALUES ('55', '删除轮播图', 'banner:delete', '52');
INSERT INTO `permission` VALUES ('56', '公告管理', 'announcement:index', '68');
INSERT INTO `permission` VALUES ('57', '新增公告', 'announcement:save', '56');
INSERT INTO `permission` VALUES ('58', '修改公告', 'announcement:edit', '56');
INSERT INTO `permission` VALUES ('59', '删除公告', 'announcement:delete', '56');
INSERT INTO `permission` VALUES ('60', '关键字管理', 'keywords:index', '68');
INSERT INTO `permission` VALUES ('61', '新增关键字', 'keywords:save', '60');
INSERT INTO `permission` VALUES ('62', '修改关键字', 'keywords:edit', '60');
INSERT INTO `permission` VALUES ('63', '删除关键字', 'keywords:delete', '60');
INSERT INTO `permission` VALUES ('64', '链接管理', 'link:index', '68');
INSERT INTO `permission` VALUES ('65', '新增链接', 'link:save', '64');
INSERT INTO `permission` VALUES ('66', '修改链接', 'link:edit', '64');
INSERT INTO `permission` VALUES ('67', '删除链接', 'link:delete', '64');
INSERT INTO `permission` VALUES ('68', '首页管理', 'home:index', null);
INSERT INTO `permission` VALUES ('69', '角色管理', 'role:index', '1');
INSERT INTO `permission` VALUES ('70', '新增角色', 'role:save', '69');
INSERT INTO `permission` VALUES ('71', '修改角色', 'role:edit', '69');
INSERT INTO `permission` VALUES ('72', '删除角色', 'role:delete', '69');

-- ----------------------------
-- Table structure for review
-- ----------------------------
DROP TABLE IF EXISTS `review`;
CREATE TABLE `review` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `content` varchar(1000) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `status` tinyint(1) DEFAULT NULL,
  `remark_date` datetime DEFAULT NULL,
  `user_id` bigint(20) DEFAULT NULL,
  `article_id` bigint(20) DEFAULT NULL,
  `parent_id` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `user_id` (`user_id`),
  KEY `article_id` (`article_id`),
  KEY `parent_id` (`parent_id`),
  CONSTRAINT `review_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `user` (`id`),
  CONSTRAINT `review_ibfk_2` FOREIGN KEY (`article_id`) REFERENCES `article` (`id`),
  CONSTRAINT `review_ibfk_3` FOREIGN KEY (`parent_id`) REFERENCES `review` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=23 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of review
-- ----------------------------

-- ----------------------------
-- Table structure for role
-- ----------------------------
DROP TABLE IF EXISTS `role`;
CREATE TABLE `role` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `number` varchar(50) DEFAULT NULL,
  `name` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of role
-- ----------------------------
INSERT INTO `role` VALUES ('1', 'admin', '管理员');
INSERT INTO `role` VALUES ('2', 'user', '用户');

-- ----------------------------
-- Table structure for role_permission_rel
-- ----------------------------
DROP TABLE IF EXISTS `role_permission_rel`;
CREATE TABLE `role_permission_rel` (
  `role_id` bigint(20) NOT NULL,
  `permission_id` bigint(20) NOT NULL,
  PRIMARY KEY (`role_id`,`permission_id`),
  KEY `permission_id` (`permission_id`),
  CONSTRAINT `role_permission_rel_ibfk_1` FOREIGN KEY (`role_id`) REFERENCES `role` (`id`),
  CONSTRAINT `role_permission_rel_ibfk_2` FOREIGN KEY (`permission_id`) REFERENCES `permission` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of role_permission_rel
-- ----------------------------
INSERT INTO `role_permission_rel` VALUES ('1', '1');
INSERT INTO `role_permission_rel` VALUES ('1', '2');
INSERT INTO `role_permission_rel` VALUES ('1', '31');
INSERT INTO `role_permission_rel` VALUES ('1', '32');
INSERT INTO `role_permission_rel` VALUES ('1', '33');
INSERT INTO `role_permission_rel` VALUES ('1', '34');
INSERT INTO `role_permission_rel` VALUES ('1', '35');
INSERT INTO `role_permission_rel` VALUES ('1', '36');
INSERT INTO `role_permission_rel` VALUES ('1', '37');
INSERT INTO `role_permission_rel` VALUES ('1', '38');
INSERT INTO `role_permission_rel` VALUES ('1', '39');
INSERT INTO `role_permission_rel` VALUES ('1', '40');
INSERT INTO `role_permission_rel` VALUES ('2', '40');
INSERT INTO `role_permission_rel` VALUES ('1', '41');
INSERT INTO `role_permission_rel` VALUES ('2', '41');
INSERT INTO `role_permission_rel` VALUES ('1', '42');
INSERT INTO `role_permission_rel` VALUES ('2', '42');
INSERT INTO `role_permission_rel` VALUES ('1', '43');
INSERT INTO `role_permission_rel` VALUES ('2', '43');
INSERT INTO `role_permission_rel` VALUES ('1', '44');
INSERT INTO `role_permission_rel` VALUES ('2', '44');
INSERT INTO `role_permission_rel` VALUES ('1', '45');
INSERT INTO `role_permission_rel` VALUES ('1', '46');
INSERT INTO `role_permission_rel` VALUES ('1', '47');
INSERT INTO `role_permission_rel` VALUES ('1', '48');
INSERT INTO `role_permission_rel` VALUES ('1', '49');
INSERT INTO `role_permission_rel` VALUES ('2', '49');
INSERT INTO `role_permission_rel` VALUES ('1', '50');
INSERT INTO `role_permission_rel` VALUES ('2', '50');
INSERT INTO `role_permission_rel` VALUES ('1', '51');
INSERT INTO `role_permission_rel` VALUES ('2', '51');
INSERT INTO `role_permission_rel` VALUES ('1', '52');
INSERT INTO `role_permission_rel` VALUES ('1', '53');
INSERT INTO `role_permission_rel` VALUES ('1', '54');
INSERT INTO `role_permission_rel` VALUES ('1', '55');
INSERT INTO `role_permission_rel` VALUES ('1', '56');
INSERT INTO `role_permission_rel` VALUES ('1', '57');
INSERT INTO `role_permission_rel` VALUES ('1', '58');
INSERT INTO `role_permission_rel` VALUES ('1', '59');
INSERT INTO `role_permission_rel` VALUES ('1', '60');
INSERT INTO `role_permission_rel` VALUES ('1', '61');
INSERT INTO `role_permission_rel` VALUES ('1', '62');
INSERT INTO `role_permission_rel` VALUES ('1', '63');
INSERT INTO `role_permission_rel` VALUES ('1', '64');
INSERT INTO `role_permission_rel` VALUES ('1', '65');
INSERT INTO `role_permission_rel` VALUES ('1', '66');
INSERT INTO `role_permission_rel` VALUES ('1', '67');
INSERT INTO `role_permission_rel` VALUES ('1', '68');
INSERT INTO `role_permission_rel` VALUES ('1', '69');
INSERT INTO `role_permission_rel` VALUES ('1', '70');
INSERT INTO `role_permission_rel` VALUES ('1', '71');
INSERT INTO `role_permission_rel` VALUES ('1', '72');

-- ----------------------------
-- Table structure for start_fans_rel
-- ----------------------------
DROP TABLE IF EXISTS `start_fans_rel`;
CREATE TABLE `start_fans_rel` (
  `start_id` bigint(20) NOT NULL,
  `fans_id` bigint(20) NOT NULL,
  PRIMARY KEY (`start_id`,`fans_id`),
  KEY `fans_id` (`fans_id`),
  CONSTRAINT `start_fans_rel_ibfk_1` FOREIGN KEY (`start_id`) REFERENCES `user` (`id`),
  CONSTRAINT `start_fans_rel_ibfk_2` FOREIGN KEY (`fans_id`) REFERENCES `user` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of start_fans_rel
-- ----------------------------

-- ----------------------------
-- Table structure for user
-- ----------------------------
DROP TABLE IF EXISTS `user`;
CREATE TABLE `user` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) DEFAULT NULL,
  `username` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `password` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `picture` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci DEFAULT NULL,
  `register_date` datetime DEFAULT NULL,
  `validate_code` varchar(50) DEFAULT NULL,
  `out_date` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of user
-- ----------------------------
INSERT INTO `user` VALUES ('1', '豪哥哥', '1725136424@qq.com', '43372f58e954da51875ee37bb4525111', 'http://localhost:8080/static/upload/images/user/714cd65e1220461a98a3db1a65d8eaf5.jpg', '2020-08-30 05:40:55', 'ba98f618-0ecf-46ac-a171-f91bac8f1f0f', '2020-08-13 14:46:07');

-- ----------------------------
-- Table structure for user_role_rel
-- ----------------------------
DROP TABLE IF EXISTS `user_role_rel`;
CREATE TABLE `user_role_rel` (
  `user_id` bigint(20) NOT NULL,
  `role_id` bigint(20) NOT NULL,
  PRIMARY KEY (`user_id`,`role_id`),
  KEY `role_id` (`role_id`),
  CONSTRAINT `user_role_rel_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `user` (`id`),
  CONSTRAINT `user_role_rel_ibfk_2` FOREIGN KEY (`role_id`) REFERENCES `role` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of user_role_rel
-- ----------------------------
INSERT INTO `user_role_rel` VALUES ('1', '1');
INSERT INTO `user_role_rel` VALUES ('1', '2');
